(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    250695,       4784]
NotebookOptionsPosition[    246681,       4707]
NotebookOutlinePosition[    247084,       4723]
CellTagsIndexPosition[    247041,       4720]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The simple sigmoid (logistic function)", "Title",
 CellChangeTimes->{{3.802274661487261*^9, 
  3.802274678810876*^9}},ExpressionUUID->"1cfd4664-07e3-48c0-b8bf-\
d366715160af"],

Cell[CellGroupData[{

Cell[TextData[{
 "Derivatives as a function of ",
 StyleBox["z",
  FontFamily->"Courier New",
  FontWeight->"Bold"]
}], "Section",
 CellChangeTimes->{{3.802274417453313*^9, 
  3.8022744474507484`*^9}},ExpressionUUID->"439df9f9-dba9-4270-919a-\
b3f7bc84cbf6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", "z_", "]"}], ":=", 
  FractionBox["1", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]]}]]}]], "Input",
 CellChangeTimes->{{3.715704100314364*^9, 3.7157041157119217`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f821c7f8-494b-4bed-aaa9-4bb9e9157434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", "z"], 
  RowBox[{"\[Sigma]", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.7162021917818604`*^9, 3.716202214357045*^9}, 
   3.7162023271929817`*^9, {3.8056677285224266`*^9, 3.8056677356587057`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e862d899-4412-4275-bc80-85025caf0b0e"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", "z"}]], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "z"}]]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.802274524828454*^9, 3.804328934340479*^9, 
  3.8043296812197995`*^9, 3.805667737141486*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"e3b9c8d3-7fd3-41a7-b4e0-d1dd4334fc6f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]1", "[", "z_", "]"}], ":=", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "2"]]}]], "Input",
 CellChangeTimes->{{3.7162021917818604`*^9, 3.716202214357045*^9}, 
   3.716202334755018*^9, {3.805667804282131*^9, 3.8056678053485856`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ab8d7aff-c213-4dac-b18e-2462c58a781a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", 
   RowBox[{"z", ",", "z"}]], 
  RowBox[{"\[Sigma]", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.8056677583209767`*^9, 3.805667761069846*^9}, {
  3.805667847268123*^9, 3.8056678644206934`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"63c3f0a3-c36f-44e9-a9fb-69bdddc21dd4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "3"]], "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.802264541033429*^9, 3.802274529933601*^9, 
  3.8043289344130316`*^9, 3.804329681303236*^9, 3.8056677622215996`*^9, 
  3.8056678649032297`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"a7ca6945-7317-4cbe-97c2-e7341d905cbd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]2", "[", "z_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "3"]], "-", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "2"]]}]}]], "Input",
 CellChangeTimes->{{3.715704855570468*^9, 3.715704861393168*^9}, {
   3.716202220045101*^9, 3.7162022301341963`*^9}, 3.7162023558816233`*^9, {
   3.8056678110766945`*^9, 3.8056678129753485`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"def33e1d-0fb1-47f9-9a7e-cbc1e743d669"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", 
   RowBox[{"z", ",", "z", ",", "z"}]], 
  RowBox[{"\[Sigma]", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.805667768040584*^9, 3.805667772629096*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"3991a231-9eaa-48fe-ba60-b3f5c50a2e54"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "4"]], "-", 
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "3"]], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.802274535946501*^9, 3.8043289344750347`*^9, 
  3.804329681381919*^9, 3.8056677735444813`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"73eeee51-ea1c-4c6a-a040-158ca6e1e4bb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]3", "[", "z_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "4"]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "3"]], "+", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "2"]]}]}]], "Input",
 CellChangeTimes->{{3.715704855570468*^9, 3.715704861393168*^9}, {
   3.716202220045101*^9, 3.7162022417913847`*^9}, 3.7162023915128603`*^9, {
   3.8056678187281685`*^9, 3.805667819319624*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"91a3c062-c5da-4f14-aa45-9e80a7f3330c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", 
   RowBox[{"z", ",", "z", ",", "z", ",", "z"}]], 
  RowBox[{"\[Sigma]", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{
  3.726160363708063*^9, {3.805667781252222*^9, 3.8056677845488667`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"137635a8-146f-4121-b262-6e763c6e121e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"24", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "4"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "5"]], "-", 
  FractionBox[
   RowBox[{"36", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "4"]], "+", 
  FractionBox[
   RowBox[{"14", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "z"}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "3"]], "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "z"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "z"}]]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.802274546239606*^9, 3.804328934536276*^9, 
  3.8043296814637213`*^9, 3.8056677861118917`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"27a9cbef-11cc-4e87-bc9e-187240cba136"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]4", "[", "z_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"24", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "4"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "5"]], "-", 
   FractionBox[
    RowBox[{"36", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "4"]], "+", 
   FractionBox[
    RowBox[{"14", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "z"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "3"]], "-", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "z"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "z"}]]}], ")"}], "2"]]}]}]], "Input",
 CellChangeTimes->{{3.715704855570468*^9, 3.715704861393168*^9}, {
   3.716202220045101*^9, 3.7162022417913847`*^9}, 3.7162023915128603`*^9, {
   3.726160375622919*^9, 3.726160392919348*^9}, {3.805667823338101*^9, 
   3.805667823827886*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8787dd1c-f628-496e-bfb6-e9438ab70b9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]", "[", "z", "]"}], ",", 
     RowBox[{"\[Sigma]1", "[", "z", "]"}], ",", 
     RowBox[{"\[Sigma]2", "[", "z", "]"}], ",", 
     RowBox[{"\[Sigma]3", "[", "z", "]"}], ",", 
     RowBox[{"\[Sigma]4", "[", "z", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<z\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(\[Sigma]\), \((k)\)]\)(z)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<The sigmoid transfer function \[Sigma](z) and its first four \
derivatives\>\""}], ",", " ", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7162022650847692`*^9, 3.7162022992138243`*^9}, {
  3.716202362804006*^9, 3.716202411728331*^9}, {3.716203285484805*^9, 
  3.716203289164419*^9}, {3.718460633303244*^9, 3.718460722783835*^9}, {
  3.7184617249675694`*^9, 3.718461781242424*^9}, {3.718461812463318*^9, 
  3.718461837096304*^9}, {3.71846186964568*^9, 3.7184618714114847`*^9}, {
  3.718461918552198*^9, 3.7184619209146767`*^9}, {3.718461957501399*^9, 
  3.7184619597237663`*^9}, {3.7261604012545233`*^9, 3.726160412684531*^9}, {
  3.8022745723181148`*^9, 3.802274640097105*^9}, {3.805667873708635*^9, 
  3.8056679143178196`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"daafd1df-c9d6-4a87-a849-191c538d6855"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt13lUzP33APCRapoa08x8hAptRFFaPHpSue8KJUVJEZFC2oRKetTT9rRL
aJE2LUobldAmetNeFG2WQqIRmc+nRZSo7/zO+f3xPve8zj333Hvu/eut4HRq
z3EhGo3WLnj/F//9bDExP0/g5eWZb364+gPPf8lU/28C14r7Hz0S5A+72O9/
Vs4QuJzVGvUm0R/kdU//OTVJ4HWV6f007A9PYuLFBnkE1rTcI7Z0aQCIqb9c
iZ8ROOFDR4dPSwAk+hzZGZxG4CnadOKevwOheIF3Lk2HwDY2lURHfjD8bV0k
mqJN4Dx1kccf7wdDU+4HF00NAvd6m20RaQiGQRNLNScVAs/yqjrdB4NhSZxa
Rb0sgdvXthxpkQ6BUJmR5ggagV8wQ782x4XAfu1Do8w2Lt7iyK1YExoKIsdN
tKQPcfFQn/HKR5fDoOuw5r5ROy5+se1h9URWGFzfLxvw0Fbg1PFp7TthsMmc
anS05GIrE/XogRdh4KydbFdkzMUTQb9ozUQ4tCz4HKynysUmoXuHGanhEHs9
ovPQTw7e31VSdbEsAohXjR45Vzj4jmdFy0t6NOB12VFhcRy8/oiliJJsNHgE
BeQ6X+DgQuaj8QD1aGhS1h5QDedgv4elIodsouH82aydd/04eOrYS/POG9Ew
xPVXbXDg4ORHg2IRxjFQbqExMqzGwZLGhvsvxF2APfWpR1Xa2HhlhNXTKJs4
WNXz6V1zExvzZ3Ryej3j4Mcn9QPO9WwcvdQB6UTFQYpoveWNWjZ2VspZqvsg
DgZ3jBqsKGXjszOSwrqKl+Dkc71lnEQ2dlB8ffHv75cg6u3A0+lDbDycPee4
r+cy+FMGHpc/SmKx1K0p5cXxkO6oM4LeSmKduTX31GriobZb49h4nyS2XhTV
c7clHuYqlez3tElir5iF2z8Mx0NoMMN88R1JvHLF747H8gkQw+lddy1QEt+X
9riRdS0BUrU9RjOlJbGrw9J2ySuJUHUu1a10Nwvf6teH1JtXQfHYmbxXpiwc
+qbH8Ur1VbhoaTq4wIiFVX6JM649vQpOKj9s9m5k4acalVI9E1dBot/KcGYZ
C5PMkgAxlAyHtzCWGQ8twhLhvYYn3ybDQhG/xj6fRbhpmDwduCoFdsXbyM+l
MPGlSnunVF4anNeS3GGSwMTJrxyr3f6kwc2uljOXY5lYS2+npsXidJjj6tcr
BjFxXSutxtQoHW4nKDqbHGPi1mi7W7KZ6cBMooovqzNxQWbicgP7DGhLjtZR
qpfAVa6Vus8/XQeTjIe7TL+J4/1j5wu1pLNh7OLAb2GeOP6VZVi7RjkbUgNn
ix6/F8cvuxx2KGtnwzcHXbpetzj+rL37G1hkQ7zi/Tq1GnE8HOTH4IVkw7v8
WxpElDhO2XrdciE/G3zL07jvlMTxZp+snWVtOXCz+Z8+74MMvHZraIpVXi6k
aPkaF+5l4JnwShHVilyIzfAqe2fBwAUX69Ikm3PBy9s9Zgdi4N7kPDehL7lg
IHdoi9xqBj7FOpsaqZYHPb7oZhsphpPs5aKWVeeBkDLdVyFUDO+lZ/Qmv7kJ
h8MSpToL6LiGvShj045C6IAfdL8cOj4jNiBvZl8IMLvvl3w6HRvdszN1P1UI
8l6y770u0XF7TX9uX1IhDDnkFCzxpWN+zaqIPR8LwVmvTO+wMR1bDRhF8oKL
wHOi3ZH/VhRb9mzQeNhUDIFHFpZIEKJ43+Xf5iuDSoCmJldnHC6MXSfRjQzT
cnhzISWyuFcI0wOLR921K2C5uEvhd6MF2KvwwuT5iBpw/0tVpH/5fN0MVtg/
LIzhqM67gvr62bpjfZa6uzTqQdVv87xn7nTdU/uoEOFrTZD91rrhH8Opur3S
FfkTz9rgc4iUvsmyiborB81i2XqdUJO0dtuILb+uIOCOwxaTLtD48vr7hgxe
nZdJHHf1ql7YWtPP+GM7WNdurOzWTnsFpwtLpzlEd93vVNJPY2s/2DorZXcF
VNetP2vxO8rlHTQ/fR2jbV0FFwYDVXyeDMJmtcfllsndsPBGcyjbcwiEfKUG
jkkPwmQv7Zfy+EegMy1DnEgeXJpSn+wPGob/BvuMvW7wYTDrbvKPUR6UpUVY
Bk6Mg8zHBr6R0gicyjnG/mQ7BSedzF8nW3+Bw26pKyJDpmFEwfHbi91fIdrK
V1c7fRb6ZsiNHSqjILw4iRf0aw64G26Ub/45Ci/bw8fCJBeg3S9G7n1M+wY2
/k6bUuuFkOHvqp5ubT54SIwqdhwQRh7UAeJSMR9G/6kRlnAURr1BLpUGt/ng
NhLNMzkhjNzXd+qPlvDhROPaosfewiirdwlpVM4HpyBnzfuxwmim9/Lspyo+
2E1+gPRHwuiEYcuO74182N7/yt5NUQRt2xs+YvyeD3LFTVdFv4qgqdBbti0s
EvZmVlW3jYmg7ZmvG/ewSYhJKBqI+ymC4ur/Zg9wSPjuH6e4VEQUzVBeuqOL
SWgzty1ZIy+KgjB7YlaGBF9yuNHUVhQ1TQylf1Ym4ZmmyFTME1HUduKvrm8G
JPhXGVtLptHRmuGlab0uJGjZPx9zyKYj8bzPaaJuJHydt48ry6ejfi25hk3u
JBww8W21ukdHAZnDsYknSdjcVwCJz+josWYOa7sXCdOTi9ZL08TQNaNbpiH+
gv4bXgkrHRdD5za56NpfJOH0TY+KTRsY6NGl5fa4hIR3nbJJrE0MxDQwvtBT
SoLFTJs3T5+BdAeHPnwuI0HVXEXzqhkDvb/2nc68S8Kn8eHiqeOCfOAqU7NK
EvYZOGTfS2egOI3qFZl1JGzpsYrVEhdH8iplG0s6SWAK6TipD4sjjVO8qhA+
CdXnFlrzRsXR+iMW6kdIEpz5ncbXJ8RR4bWsKQOKBPzKZTWLJoFa9YUDfo6R
4F2aOsKXkUDenufPOn0n4Y39nOdtSwn0T/OfyGWzJBRUNvqvr5VAemkzoWJi
FGw7uTdJNYGJqujN6Rx5CnziH9BOpTDRXPz0/AOBcysVPe5mMlFet9LwcQUK
hITGjfRvMdHI4qZNVYoU4KsXxywamajTp4G2bzUFm3HTzjM/mUi21dr/X1UK
1AldoaqDi5CPyplDpzdSsKx6xaltq1goJHplw/x2CuaO5sty1rFQlWikXIoJ
BZ9Ymi0Dmiy00bFmTtOUgrJjWxV8gIUWBNLMnHZQYMJ27845wEIH871XPtxJ
ge+JKh3aFRYK5rty7C0p6JWypj34w0JFlbN5hnYUxHtFXdF4KYl0EwzIR64U
/Hp6qyrqrSSK8o+v0XajwGnNi/eDHyXRtNNTtQKBtQek1a+MCezznXHZnYKv
OTbD08Js9GJGI+vgSQpimZ9D7FaykfnJ/ICh0xR0vGc8kLFiI6JcprTsHAV7
InarZVSwUe6Pgwb2YRTctBvbUV3NRhnjrKYagWfWX3HurWUjleWJdOlwCrK6
uzIX1bPRmv8+3e8RmC9vyw3sZCPyvFGjaSQFUQ/sfx4eYSOWa36/UgwFj8Zc
H8vLcJBbct62/EsUqB4Ms8n9l4OWjZCJ/BQK7M5UcIVDOEhn2NDPKFVQHznS
eTSMg7rS3kklCzx819xM6QIHnVPpCYY0QX+mFORc46DbBnWyF9MpkHqUtzbr
LgcVcaKSZDMpoCk0z6Z94SCnABabnktBH4+Rk2DDRfL6TfuUblPQtDc6vXo/
F817GnUcFbjiiVjy+4NctKhPhsgV+Op1euw6Jy5SHjortqqEAhtbEd96Ty6a
PMfLUyiloKeRZjYZyUXP5XntxB0KunJ/ju+p4aLedZm4555gv07Dhlw5Aq0r
OtL//AEFH4Tzp5MUCcTn5akyayn4ftOlVFqZQBdXPdluIrD06OhyBTUC3aCr
8WoFPuY98XODHoFKvUOb8h4K7v/f/G2LfQRayXXV8qyjQDlPWib6EoHQ1/nX
b55QoGvS/5yZQKDW3fFS7HoKzL+kR16+SqDiv1YrbRP4jJr8VHIGgZJ+jNwr
Ebj2vvLzm8UEWnt6bWVQg+D+TdoRDc0EiuuU2y/dRMFxlyl903YC+VQ+a9wp
sJ945WR7B4G+RbynBwqcsWuzY3cvgVin6hlDAo/0If2hjwQqK0sSK2gWzOsn
NHn8M4GsfnmseC3wItmGwi9fCfTXpg66eAsFWg4mS8fHCeRhVnfIXeBtCxgd
PlMEyt6c3Jom8P4bbWHT0wTiWERLPBXYbVusXsBvAikaVyv9Fvj//ycoA5tx
17dS8D9euRtm
          "]]}, Annotation[#, "Charting`Private`Tag$3029#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Iwb87/4P2fW/+7//A/fo7xU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3029#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmXk4VV/Ux5GEVLil0KDSgIgopFpXGRokGUuiZE5oIPMcCmWISiqVhBIZ
7j1J1g0ZGpAQP2SWIfMdzN7zPu/713k+zz5777PW97vWfs6zN1u7GtrycHFx
ZXJzcf3v0+/vyYnFRQpDfceJ3Hdt3tDnI8ZqmaMw7uSIUw9OeIO+cDuHPk1h
RHqtFmvh8wEpdbd510kKo6ll3xctRR8ouRPH39FHYdhYylj8DPEBfoXfGxk/
KAyDLqfOJnlfuH/jwonAxxTGqsrBgyPRfvCG+3oqlyqFkfNjINqMGghqRpl8
j5QpDLlvj1yLTwZCeWqng5IihWHsnjC7+1wgdOgayFvLkPtf+qKk7BEIYnfl
aaWSFAat9sJk4dtACJborwjjojC+U9w/NUoGwRnl80NCX0UZir6hozd5gmGp
re4e8fOijMXan+tUJkOgzlLJbOisKINxe0mXG08oPD0j6fvJVJQxsOrLN0Ik
FPbpjX65aCDK6Nt4cKOTYijYKT84m3lElOHc9CbKyCUUKrn/BmrIijLqhI/w
H/0XClFPw2rOc0QYK1s5rKGxW0Bp+uL8IlaE8fDnD3r1xghgyD2PCL0rwuCS
MXyVpxgBzgG+qXaRIgxVI3OpV4cjoHy7cqvsLRHGdce8tiy7CPB2TzmR5ynC
uPnC7KRZdgR0ifrIllmJMF7RdCuFj9yG3JOK/b3yIozK4EOLxjfugGFp0iWZ
r8KMtQ7XazsXo0C6vudPRbkwIz9s01u2WDSwexTM7UqFGRfVrmWsV4iGR3yl
Bi+LhBkmRLRyskU0dBwbOrghW5jxXL8226kwGq7UaqwTuS/MMDMwf6nvdRci
2lq/T50XZojaTA8d4okBn9GDzjHdqxjaclqsKxmxQNxMcso+tZLR9ffGex+5
BNCPM5FaeCTEMNu1R8Iy4xHoPvmkf/SfIKMxZTz8v6ankFbh1Xj9nABDcSrh
2hbVF2AZen9NTfoyRvgBlz56xivwv7Dk3XIKH6ODut/rxpEM4JLfhEdu8TIC
h8S4ZyWy4L/IR+FvGngYQYO249olObBe0CGDeZiboaSyXDK4ORcu75Vd2rJ+
EbPje+otlhTAtaUfXnusWkRv31y23fIC8G7QPS7Ks4ibdb9fdqYUwB1323vH
/i6gAffAWsetBZBZkCJOvF9APZlNwzuOFMDA3rUKCToke0YKZQcVgP0+XrNT
bvPIJbk+yXemAFz44qcHrecxRum5RAM3DTwaNyeHmcyj8KUesR0CNAjzgM5P
++cxrylei76WBmk078u7ls5j1Ol0DFOhQe++8QCBpDl8u3Laod6ZBpdU/6SX
ls7iAeHIhQ+/aWCXrmqqQ5/FwO17y/PbaOAkHrukKnMWS9TdtqR308Bt9ohl
dewsXhDdbu05SgNfzKA0W81ihNJ0wCc+OtzXdfcfmZ3BAwGv5aqV6fCAqJa7
OjqDhb+SfpxQp0OSzM7mya4ZtDntsePzITqkLG9Rnq6awbigf1/jjtEhq4Y6
sOThDF5ratSttaRDuZmQsbjKDE7s+M14HU6Hqkpb7uQdM8glZaabFEWH7+r4
bqPkDBq4Rr8MiaVDneQ1AWmeGTQcHHm5/zEd2tt/FyvUTmOE1UVltXd0mLJ/
KaPlPI12Z/I5NnV0mG2aayy3mkbBePONxY10WDhmGnrMaBqdm0xVVrTQgXeX
QLv+/mmUrjzBjOqmg8iYy/2z/NO4Rd5DXoRJB1nP/YsuqVOo9se8chOFAEab
vmx34hQ6mNhFSa0lwPTIJROz21MYtbfCdrUkAcEro96AyxR6RDJXNGwhoDm1
zUxYbQpLLAplCCUCXAQngkNlp9ByTPXuqb0E8LrxvZtaP4VaNjXXmtUIUNTY
zdvJPYXH+zOulgEBET8Dc95/42Bgd5EGS4+AjaoJLduKOSgr9yFxowEB+ckZ
fEk5HHR7+rRV3YiADvs6i+AEDhpYpv7RPkuA6sJWASMrDk7VRuS+tyHg+yU1
lYrTHEyre3/OwZ4A6yo9Kw0tDh6+M28u7ETA3fvuBVtlOMg/Ui2i4kpAn2zF
ReYEG513dJ6t9CTAN6YlyqGXjcXWcVnLfAgQZY/SW3+z0VfXpVTVj4BDn9et
/FLExo1180OOQQTUb5dXV89mY87+webLIQQ4RWnaZD1no/Ch61TLWwQkmDkV
JoSR8+sFFFbfJkD2k3+vgBcbUyr8Yn7fIfO9JV7Y/zIbt4ee2xIZRcC/4Y92
dgZsHPxiH1lyj8y3UW3sf4fJcXmlQzqxBKz70FOkv5eNYnFJvz/EEaAVuoKi
KsFGT7tf7m4JBPw3sPnQGyE2MsDLNC+RALdT+xw3LbKwycK5ofcBAXwFx+/H
j7OQMHnbsewRAY8lrHBZDwuLTmvaiSeR+gReH/RpZOGg5gFjiccElPeGrxmr
ZKGgJP2hYDIBEzk5l5uyWHi0uqSNeELqJ/YlUS+Fhf4FtEKPp6R+vs2fGXEs
PCA2nrb1Galf5/A/lVsszLlcFIMkH9flWZdxk4X1D67YHU8h9XwrdmSDEwsN
NtmIlZHsISrnEmvBwru2gvd2PSdAyBMeLT3FQpeBhuIQkp+3GZV5abIwNEj3
fhXJe3r2zNSrsFC0YEFwluSyQRFFxZ0szDVR09nwggCT8THbSEkWJvE0qiqS
3Mepedy3koW+mSU/lUm+ufDupyYPC4XpE0t3ksy/9O6yJywmflezKRci+dHy
Kwen+pk4KLppaRe5vqyo3nWjViYm7tib/5rkj+vkMt7VMLE6pOTLeZL1Ngm2
C5QykR05LMdLctu2gdW2NCaq7fzblETG57Kr8jgjg4m844PFm0le3PM6UPIJ
E7+eg9qHZH5i1MNoHjFMLPu7d3GRzOdmqu2/nyHk/sflDpmRnKujtUX+JhPn
noYHPCXzf+Tk1jMRTkyMultc0EDqU2/Ec7f7PBPtgk/9miP1szXvLD10mol9
1V++UkhmX2BMP9Jiok0ncVeC1Dvc/tlulioTy698FxEh/bDOxd/WQI6JFsk5
OhzSLxo+B37yiTJxffNgTBzpr+9Bksusl5LxindG6t4nwDJi5sCnqUnM/9S/
5B/px8AEIv16+yQ6KC3sWxJD6pGtEtjxdhL3NC0eciT9b0Kj0DRSJtFXtJv+
MJzUo2hiKDF+EqULe3XoZL3wf80xO+k9iZVKXTc+k/V1smfX7kLdSWS/UM3j
9yLgz+By2zUakxj2Y3dAtgfp7/HBJDeFSdRTEljQukFA3EI63441kxh6YqRb
g6zvxnXb/sR3TWBylRD3GbI/2G/iXT3aMIE718isvn6RgKlt3ceOV03gyKUZ
b19LAiSUnxdw5UzgYKvrGvMzZHwnN0Rf8ZtAUYw4CCcI+Bu05oDuugkc6+Z6
8FqeAEG/7NF4wQnsEyr7dkKGAAXPYy875sZxgj3n+p806WcXP0HvznHcpS1d
RyP7J9+53qa3meOYv2I6zomf9JNpQNR08jh28Ro3XVhCgP5pcarOvXHcEvZ9
u+YCHRJ0T75uvz6O+/lk3uEkHaRVCtxFD47jOpdJsbw2OhzdfUrGavc4ZgpV
Gk/9poOz7EDrm83jaCgmfnAHeT7kS23Q0uYbR4vxox2a5XQ4suKWqGfNGA5S
+w46ZtHBus84u+3iGBbLe+++eZMOYZ0j1rLGY9jHP7bO0I0Oma0RYjd1xvD+
wWl+MUc6TNQV+QnLjeHDtR+bzpjTgSfg2MOw/lEUXrVwuEqDDqA08PP0ilH8
qvFxs/4MDQoTdmr3mw7j2N5pXbotDfjP/b3EfWAYk0LqU3+do4GpVFqwxOZh
7Gp6LNx8mgYTmVsZekP/ULoziO/ZQRrIMDZqvA/4h9TshVVrV9Pg4eBqJe/0
Ibxw5O+xgqICcAfuDUIzA+ips34iZS4fSngZGtvaB9DwgL5Ty2g+CH/1Nz9U
NoDmH63rFrry4a3x3AO3uwO42sfOm6sqH3ocOaINWwZw6t6XK6Px+WB4f5j/
6Yl+VDB/muK/LR8UB5qZu5/0YbLOpRPBqnlwY0xeZm1oH14wN7o8ujMPCE7Q
+QWnPpxzVl9yTCIPNPlky7+r9eGB0qKCz3O5YLjV+4FjfS+2Xp4bqGLkgvt5
if0vl/cizTptzwHtXCj8aR4g5t2Nh2/6uPbCe9AqbBGYN+3A9MXW307zWfAu
85V6hUYH6rknVHX8yoJ1j10dY6U6MDCRkbg7MwsaOXxxJ+rbUa25/vIZ0yzY
5mMq/GTmD06FJ+e2vH0LJUEsIapuG/L6TMfXGL6BubvKfGEdzdjqUhpFhKSD
W0b2lAjlF8ascMvbdesFmNptfV7n+wFzCkTkT9nfhorvzXeUyXNXsZwx60+N
wP3yn3MNHvyCCBaH+Dj/AvfWNyYWV/0C6dMVnyLlXqKizz/vXXO/wHns7Tet
sy9xe9XaI/wX64FrjKl2Nf8lUmxdfqFsA3QstnZmOabiv2RJpkJxI8xpVd+I
rHmFz4Q89q7obQaLd00ZUeHpmJQXKe6z9j+wab/xSCo3HRPNn8/3H/sPykxT
Ch+0pmNU+vcvZe9IrhDoV1DKQE+traa+ni0gveL4ubmmDDT0rfUYWt4GWpuv
joxueYM8HmtabcQ7gMs1jiL3LAvNL2TWESod4PnE+MPqqizMPQ5VQgYdEHM6
eqRxIgutNznS8sM6gGrSYtmj/Q5LKotieJkdUHkvp27j4DsMkbTRTq3uBMG+
7pc31+Qg7+fcd90h3VDLs88uQOc9WrzRfaX6rBveXf1zoenMe8xPaH0cWdgN
KnILDpKX36ONE99t5fFu0Hv6zcHq3nv8QjG/FGLZA9/fdaS2Nb7HMDvudVvV
e6HcxIn++mIuLhMyCLIe6YM6lUcDW+zy8MwOc8Y+gb9w4LtQ83n3PMw8bLMo
KP0XQj92GQSH5qG+l6df3tm/UKfGVRz+Ig8T+1K8eL+Q47aCv0Pa8nD75/Gr
aY/7YaN93JjGqXz0bJ3N8ab1Q2Kp312h8/n4lbN0TP9nP7hZxFqUO+Wji4KE
C4dvAFK9Or1Yt/KR9viw09FrA5BplXBG82M+anvEWw8eHYSnUfkQvbkAE2Of
PC++NAitM888R+ULsP/t6444/0Eo36JWuH9/AUZ1f7TUyB+EBWc+4yjDAqw3
6DGP2jQEKrJW9ZLBBWgjt9dIgT0EEXLbFP+1FmBIR+ORay+HQSfHs8giiIZ/
Ppy44lk0DH90KD6H7tBwfzwj0b9hGCL4B9yE4mk4pp05cGfZCLyp3CpyJZWG
lm/87r28PAI/S2PiNMvJ9z2kW+qVR6EqMOiqBh8dE0894m3RGwVW4vqUrhV0
HN+5UqHTdhQ6aUx9jzV0TG/hBA4/GIVLDxOOXJKmo5jmt+18c6PQu+OErLEm
HaeXqn+QtB4DqXvbTB7cpGPatckfT13GQNzP/pyAPx2N27O6NvuMQZWokq5D
KB1ziC1CO++PgeR2vX//Yuhod1nISqV8DLLPlRwQzaBjfW0770nZcdjaN1P5
q4GOwQeTxGv3jYNERRCubaGjYqaxgtGRcYhnB0oc66BjZEiV2VmLcQg72y11
Y5COh/flZdreHQeBWl7Hf/Pkfo/DDPwnxuHPe935K5sJ/EYJ+7uKawLeJ5d9
6tlGYF/kLf/nKyYg3ePCSR1ZAtf7hr4t2zkBifluK77uITDCIph/udUEIM/x
gIbDBL6sD3qW7DwB8oMG21N1CCzWC9qn4D0Bg0KyfJbHCWQeCLQ5nTABIT4b
X8efJvDCBn/Gg28TIHFnw+QyKwJ9EvzMZJonQC1pZa+SNYGJK/xGCvsmwODU
cICuLYHf533W/+GeBJXS44N7LxP4190nz3XVJJzpGmlc6UIgz4j3ce4Nk3C/
/WvaLzeC/I/x8pRWm4Sfg1fkNnsQaGTqtYqmPQkiXSsWMjwJdKn2TNM1mgQm
z4PRjT4EphbfrHdymQS7rCXOPwIIFH7mrvg+dRLYxrtvHoogUG6te8Xh3Eko
ZjgOy9whUOfeDct6nAQOvXOeO4pA34DrUZz/JkGLkbXL8x6BDzjXtt7unwSz
jhInsVgCc12vFUqwJ+HgtgfBz+MI7Le62n9QhAnP2qsC/BMIXNLkFlCzkQkT
131u1SYSuNHATeziLibs+Rv7atVDAtUrXbMm1JlQamk9pvGIQGOqq1aoLhM0
pw09TJIIdCVcWtaYMOFA9H+6Fo8JvKPocu21NROWOgS6GyQT+Cr9ioC6GxOK
hFpX7XlCIEPqSspXPyYETd7fwf2UwJaHzqoWkUzIPmr94xPJbGHn6uGHTHB/
Kyjq8IxAkduXbQPSmOA9cYmPK4XAXdyX54TzmZDcafjxFsm6Xk7xLz4zYRPz
q+Y0ydbjjrIqNUz4uLY60/w5gX6Ojp+/tDKB28V5WSbJDzsdzpgNkvEKlTn8
JTnvrMNoP4cJDOTqEH1BYPVP+zDvpSwoqjjnv4vkgWP2G4QoLLB7ImmiQjJv
iV3+EykWdL+Pd5cledN+uxO7FVhgoSg9vpLk/bm2XQwNFgygenMnub6xrK2X
4TEWGGifhJcku76wEe4xZYHhq24VI5Lvej1KvnuJBcERozVT5Pe/M6jeqe7G
AvlybdN7JFfvWFLQ7csCHoZmoxjJIwuqmndvs2AvVdfyHpmflY3OP9QSWXBR
v2RuisyffNbzs90vWPCYdwfDiGTnc8uvqRWxYJX8q9FWUo+oPdSFrkoWqGT/
8FxO8lsB9zvRDSywT52/IEfqN0T/86JrhAWmzV0RQOoteI+yO3qWBWninb3K
pB9k7Y5+VOVnwwdvz1bxBwQ6rc79FbWZDcGH9H8W3if1H+qzUlVgw/GzgsPu
8QRmlkj+69zPhre55m1bSP8NuN3iVTVmQ/U6toch6Vf+o4UxnRfYkOU2crAh
msCdm0bXR11hw2W9htXHSX87/DiztzOMDSL5vAqCt8n6T43+HBnPhhOrtt01
CScw3afk5L4UNgQc7FaPv0XWp8wuu8gPbJi22ZDTG0SgXdhi4t5/bFhbWvSx
34vAsPMqWzum2MCX37a+8iaBaSqO2XeWcmB1cp1mkjuBvV11Fe0bOTBPe0xZ
e5VAG0ibun2aA9dc1vjfsCcwVKwlVMWSA4HLd7wasiHrd3iVSLsTB55NbBYw
JftH92MvGZVQDvTqxJTxnif9OKVn/ofGgcRPA7nfyP4TXBPUF1HKAaNdNU5/
9Al8kUa7plxLzl/Ube45QWCnsVRkxAAHll/vFfuhTfar95Mf96yfAkv9Zyik
TqClU9KG8KApSApQ32S6gcDZZoHq8egpiPmSvfBJnPT3MS9/i6QpqN8RMy0h
RuDPnWfalfKmwPD6nHf+SgK1/q553tozBQFiOofsF+koYxMrvefoNBgvVTZo
+kNH5vkIubaVM+BdXROil0jHmB+cFl3JGSib3RZ0PZaO8gfto3J3zIAG3roY
G0WeF+t1hsOpM8DnfntJbjAdm/9bkr3n2gyc4ftmHOFCx2KzgD0RDTMg9rzN
MkGLjrdPe6grJ88C4+G957GDNIz7Luv8NmMWTMcqzu/uoWGybvvTbfRZ4PHX
titro2HOwaO86+pmYczQIqW+loZNMhI1c8vm4NNPwYR7NBru5Cm2Kb8+B8aq
9Zr+gTQsz10ac/bEPKS773yVu5KGvKsT+gJmFiD0Nb/55NoC/P3t1ljoKm6q
VZLKNNeGPDTxsd6XVMpDPa+5rvfUfznovHxoS7U5L/XQv1Ox1eFZuOlNeSLf
4FLqDuWHusGvMtCHOGK06vEyqlpzrt+1ilfoluZM27dbgOpJj3zxO/IFCvGo
Wiv0ClJXNjvG3Bl7itpXjBNk44WoPzKDjf4UPcJ1Hza4akuvpP4Rn9Kbv5+A
cdciYhV/r6Leaupw/VESi4Zhp+Sf0ISp9fUf+g6HRWPa2bFjHz4IU0XFvkV+
dIvG6V2xdg1FwtTvtyXqDp+LxpRfdc9WlApT77sd2+ynGI3DUqai/jXC1NOn
lbqetURhxEcLjmW/MFXa1YOeqBKFxWOOn6UkRKi/vu50FR6/g7LnQk1S/USo
4kf1x67GReDZqzRR3iAR6nb10HtV/hEYEd5fcylUhEr5lbJc8XIE9ubpHd8a
KULFGLvrMloRmCK0Bl48FKH2+Y6MfmeH45riVztT8kSovNOOUtWW4ci1uWL2
8YAIdVnhgIGHehg29gm8iDcRpR6/PA1Ga0Ox3Ph28oczolS7kyaS8vyhSCvh
f9B+TpQ6YyjaLTIdgolPl0XJWYtSI+oNJOf+C0ET06UepS6i1BarJY6Gz0Kw
/gvX8clwUapTkZMJl2wI1qVyxg0LRakrAtYsVdINxmrrXk3RTRSqpcOem1ee
BWIn7+uphC0Uqva3VAOT2EBkpjlki2+nUGXqNr0/GhKI4kND6zfLU6jLS671
nLYPRJvrE5zdGhSq/JqwLcO7A3EmZDHrpBmFKl6WPeMfFoDbX4lL3L5HodK2
qEcr9fihum5LrVA8hSp9VU6q5Ksf6g0kh8ckUqhSXvsy7N/74VV5KdaDJxSq
RcyJ8+P+flhUsL027Q2FGiiQEj0v4YeG5cphZRUUKtRUKw2Z+qKtA+vA0W8U
qt2lh7mlh3zRU5A++a2aQs0iBnflbPfFJ/r7L/5qoFD7f9vXlrF9sL+ReqCr
m0I1f5gh3fLAB2c8eSZt/1Kor8+eKT0d6IMrJMsyBgYp1DVTwp0tDj64x0p3
7fg4yUc2npfd74Pa3ALVN1gUKn35iScjW3zwzMuvoVNTFKpKt5JU+XIfdNKO
0vCdo1AZGb8bc5je+P/3UdQD/3cfhf8DtjDhLA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3029#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
G8de1A==
          "]]}, Annotation[#, "Charting`Private`Tag$3029#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/CM=
          "]]}, Annotation[#, "Charting`Private`Tag$3029#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"z\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Sigma]\\), \\((k)\\)]\\)(z)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"The sigmoid transfer function \[Sigma](z) and its first four \
derivatives\"", TraditionalForm], 
     PlotRange -> {{-5, 5}, {-0.12768361467730882`, 0.9933071477189689}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"\[Sigma]", "(", 
         TagBox["z", HoldForm], ")"}], 
       RowBox[{"\[Sigma]1", "(", 
         TagBox["z", HoldForm], ")"}], 
       RowBox[{"\[Sigma]2", "(", 
         TagBox["z", HoldForm], ")"}], 
       RowBox[{"\[Sigma]3", "(", 
         TagBox["z", HoldForm], ")"}], 
       RowBox[{"\[Sigma]4", "(", 
         TagBox["z", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8022745637372427`*^9, 3.802274598026503*^9}, 
   3.802274641753711*^9, 3.8043289356388206`*^9, 3.804329681665167*^9, 
   3.8056679234375153`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"d4a1bfb6-56b1-42c8-99fd-27861f3fd71b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Derivatives as a function of ",
 StyleBox["\[Sigma]",
  FontFamily->"Courier New",
  FontWeight->"Bold"]
}], "Section",
 CellChangeTimes->{{3.802274417453313*^9, 3.8022744474507484`*^9}, {
  3.8022747210451436`*^9, 
  3.8022747242216473`*^9}},ExpressionUUID->"0f0738e0-8f74-4968-bbae-\
b9d651cf9591"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s1", "[", "s_", "]"}], ":=", 
  RowBox[{"s", "-", 
   SuperscriptBox["s", "2"]}]}]], "Input",
 CellChangeTimes->{{3.8022747801557198`*^9, 3.802274811613372*^9}, {
  3.802274989152652*^9, 3.8022749957825966`*^9}, {3.8056680138367686`*^9, 
  3.805668013949689*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"87b22244-6bf2-4e23-8f18-0f617ef26f25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s2", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", 
    SuperscriptBox["s", "3"]}], "-", 
   RowBox[{"3", 
    SuperscriptBox["s", "2"]}], "+", "s"}]}]], "Input",
 CellChangeTimes->{{3.802274803415573*^9, 3.8022748471264257`*^9}, {
  3.8022749903633766`*^9, 3.802275024870511*^9}, {3.8056680202301598`*^9, 
  3.8056680209770117`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"d5395d1b-6d15-4e6b-a9af-77af23d9a59a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s3", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "6"}], 
    SuperscriptBox["s", "4"]}], "+", 
   RowBox[{"12", 
    SuperscriptBox["s", "3"]}], "-", 
   RowBox[{"7", 
    SuperscriptBox["s", "2"]}], "+", "s"}]}]], "Input",
 CellChangeTimes->{{3.8022748539999933`*^9, 3.8022748864260936`*^9}, {
  3.8022749918314505`*^9, 3.80227500709114*^9}, {3.8056680241874104`*^9, 
  3.8056680243607235`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"78f1a706-f3e2-4ad7-9614-8369b02a917e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s4", "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"24", 
    SuperscriptBox["s", "5"]}], "-", 
   RowBox[{"60", 
    SuperscriptBox["s", "4"]}], "+", 
   RowBox[{"50", 
    SuperscriptBox["s", "3"]}], "-", 
   RowBox[{"15", 
    SuperscriptBox["s", "2"]}], "+", "s"}]}]], "Input",
 CellChangeTimes->{{3.802274888968685*^9, 3.802274913271651*^9}, {
  3.802274949623293*^9, 3.8022750152218213`*^9}, {3.8056680272868495`*^9, 
  3.8056680275178776`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"2ecfc2a1-db01-4f67-8ab7-608437a99c82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]", "[", "z", "]"}], ",", 
     RowBox[{"s1", "[", 
      RowBox[{"\[Sigma]", "[", "z", "]"}], "]"}], ",", 
     RowBox[{"s2", "[", 
      RowBox[{"\[Sigma]", "[", "z", "]"}], "]"}], ",", 
     RowBox[{"s3", "[", 
      RowBox[{"\[Sigma]", "[", "z", "]"}], "]"}], ",", 
     RowBox[{"s4", "[", 
      RowBox[{"\[Sigma]", "[", "z", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<z\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(\[Sigma]\), \((k)\)]\)(z)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<The sigmoid transfer function \[Sigma](z) and its first four \
derivatives\>\""}], ",", " ", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7162022650847692`*^9, 3.7162022992138243`*^9}, {
   3.716202362804006*^9, 3.716202411728331*^9}, {3.716203285484805*^9, 
   3.716203289164419*^9}, {3.718460633303244*^9, 3.718460722783835*^9}, {
   3.7184617249675694`*^9, 3.718461781242424*^9}, {3.718461812463318*^9, 
   3.718461837096304*^9}, {3.71846186964568*^9, 3.7184618714114847`*^9}, {
   3.718461918552198*^9, 3.7184619209146767`*^9}, {3.718461957501399*^9, 
   3.7184619597237663`*^9}, {3.7261604012545233`*^9, 3.726160412684531*^9}, {
   3.8022745723181148`*^9, 3.802274640097105*^9}, {3.802275071471734*^9, 
   3.8022751211209555`*^9}, 3.805667991548364*^9, {3.805668062401414*^9, 
   3.805668072282121*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"c17a8674-6682-4ee5-bd88-03f91cc5c30c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt13lUzP33APCRapoa08x8hAptRFFaPHpSue8KJUVJEZFC2oRKetTT9rRL
aJE2LUobldAmetNeFG2WQqIRmc+nRZSo7/zO+f3xPve8zj333Hvu/eut4HRq
z3EhGo3WLnj/F//9bDExP0/g5eWZb364+gPPf8lU/28C14r7Hz0S5A+72O9/
Vs4QuJzVGvUm0R/kdU//OTVJ4HWV6f007A9PYuLFBnkE1rTcI7Z0aQCIqb9c
iZ8ROOFDR4dPSwAk+hzZGZxG4CnadOKevwOheIF3Lk2HwDY2lURHfjD8bV0k
mqJN4Dx1kccf7wdDU+4HF00NAvd6m20RaQiGQRNLNScVAs/yqjrdB4NhSZxa
Rb0sgdvXthxpkQ6BUJmR5ggagV8wQ782x4XAfu1Do8w2Lt7iyK1YExoKIsdN
tKQPcfFQn/HKR5fDoOuw5r5ROy5+se1h9URWGFzfLxvw0Fbg1PFp7TthsMmc
anS05GIrE/XogRdh4KydbFdkzMUTQb9ozUQ4tCz4HKynysUmoXuHGanhEHs9
ovPQTw7e31VSdbEsAohXjR45Vzj4jmdFy0t6NOB12VFhcRy8/oiliJJsNHgE
BeQ6X+DgQuaj8QD1aGhS1h5QDedgv4elIodsouH82aydd/04eOrYS/POG9Ew
xPVXbXDg4ORHg2IRxjFQbqExMqzGwZLGhvsvxF2APfWpR1Xa2HhlhNXTKJs4
WNXz6V1zExvzZ3Ryej3j4Mcn9QPO9WwcvdQB6UTFQYpoveWNWjZ2VspZqvsg
DgZ3jBqsKGXjszOSwrqKl+Dkc71lnEQ2dlB8ffHv75cg6u3A0+lDbDycPee4
r+cy+FMGHpc/SmKx1K0p5cXxkO6oM4LeSmKduTX31GriobZb49h4nyS2XhTV
c7clHuYqlez3tElir5iF2z8Mx0NoMMN88R1JvHLF747H8gkQw+lddy1QEt+X
9riRdS0BUrU9RjOlJbGrw9J2ySuJUHUu1a10Nwvf6teH1JtXQfHYmbxXpiwc
+qbH8Ur1VbhoaTq4wIiFVX6JM649vQpOKj9s9m5k4acalVI9E1dBot/KcGYZ
C5PMkgAxlAyHtzCWGQ8twhLhvYYn3ybDQhG/xj6fRbhpmDwduCoFdsXbyM+l
MPGlSnunVF4anNeS3GGSwMTJrxyr3f6kwc2uljOXY5lYS2+npsXidJjj6tcr
BjFxXSutxtQoHW4nKDqbHGPi1mi7W7KZ6cBMooovqzNxQWbicgP7DGhLjtZR
qpfAVa6Vus8/XQeTjIe7TL+J4/1j5wu1pLNh7OLAb2GeOP6VZVi7RjkbUgNn
ix6/F8cvuxx2KGtnwzcHXbpetzj+rL37G1hkQ7zi/Tq1GnE8HOTH4IVkw7v8
WxpElDhO2XrdciE/G3zL07jvlMTxZp+snWVtOXCz+Z8+74MMvHZraIpVXi6k
aPkaF+5l4JnwShHVilyIzfAqe2fBwAUX69Ikm3PBy9s9Zgdi4N7kPDehL7lg
IHdoi9xqBj7FOpsaqZYHPb7oZhsphpPs5aKWVeeBkDLdVyFUDO+lZ/Qmv7kJ
h8MSpToL6LiGvShj045C6IAfdL8cOj4jNiBvZl8IMLvvl3w6HRvdszN1P1UI
8l6y770u0XF7TX9uX1IhDDnkFCzxpWN+zaqIPR8LwVmvTO+wMR1bDRhF8oKL
wHOi3ZH/VhRb9mzQeNhUDIFHFpZIEKJ43+Xf5iuDSoCmJldnHC6MXSfRjQzT
cnhzISWyuFcI0wOLR921K2C5uEvhd6MF2KvwwuT5iBpw/0tVpH/5fN0MVtg/
LIzhqM67gvr62bpjfZa6uzTqQdVv87xn7nTdU/uoEOFrTZD91rrhH8Opur3S
FfkTz9rgc4iUvsmyiborB81i2XqdUJO0dtuILb+uIOCOwxaTLtD48vr7hgxe
nZdJHHf1ql7YWtPP+GM7WNdurOzWTnsFpwtLpzlEd93vVNJPY2s/2DorZXcF
VNetP2vxO8rlHTQ/fR2jbV0FFwYDVXyeDMJmtcfllsndsPBGcyjbcwiEfKUG
jkkPwmQv7Zfy+EegMy1DnEgeXJpSn+wPGob/BvuMvW7wYTDrbvKPUR6UpUVY
Bk6Mg8zHBr6R0gicyjnG/mQ7BSedzF8nW3+Bw26pKyJDpmFEwfHbi91fIdrK
V1c7fRb6ZsiNHSqjILw4iRf0aw64G26Ub/45Ci/bw8fCJBeg3S9G7n1M+wY2
/k6bUuuFkOHvqp5ubT54SIwqdhwQRh7UAeJSMR9G/6kRlnAURr1BLpUGt/ng
NhLNMzkhjNzXd+qPlvDhROPaosfewiirdwlpVM4HpyBnzfuxwmim9/Lspyo+
2E1+gPRHwuiEYcuO74182N7/yt5NUQRt2xs+YvyeD3LFTVdFv4qgqdBbti0s
EvZmVlW3jYmg7ZmvG/ewSYhJKBqI+ymC4ur/Zg9wSPjuH6e4VEQUzVBeuqOL
SWgzty1ZIy+KgjB7YlaGBF9yuNHUVhQ1TQylf1Ym4ZmmyFTME1HUduKvrm8G
JPhXGVtLptHRmuGlab0uJGjZPx9zyKYj8bzPaaJuJHydt48ry6ejfi25hk3u
JBww8W21ukdHAZnDsYknSdjcVwCJz+josWYOa7sXCdOTi9ZL08TQNaNbpiH+
gv4bXgkrHRdD5za56NpfJOH0TY+KTRsY6NGl5fa4hIR3nbJJrE0MxDQwvtBT
SoLFTJs3T5+BdAeHPnwuI0HVXEXzqhkDvb/2nc68S8Kn8eHiqeOCfOAqU7NK
EvYZOGTfS2egOI3qFZl1JGzpsYrVEhdH8iplG0s6SWAK6TipD4sjjVO8qhA+
CdXnFlrzRsXR+iMW6kdIEpz5ncbXJ8RR4bWsKQOKBPzKZTWLJoFa9YUDfo6R
4F2aOsKXkUDenufPOn0n4Y39nOdtSwn0T/OfyGWzJBRUNvqvr5VAemkzoWJi
FGw7uTdJNYGJqujN6Rx5CnziH9BOpTDRXPz0/AOBcysVPe5mMlFet9LwcQUK
hITGjfRvMdHI4qZNVYoU4KsXxywamajTp4G2bzUFm3HTzjM/mUi21dr/X1UK
1AldoaqDi5CPyplDpzdSsKx6xaltq1goJHplw/x2CuaO5sty1rFQlWikXIoJ
BZ9Ymi0Dmiy00bFmTtOUgrJjWxV8gIUWBNLMnHZQYMJ27845wEIH871XPtxJ
ge+JKh3aFRYK5rty7C0p6JWypj34w0JFlbN5hnYUxHtFXdF4KYl0EwzIR64U
/Hp6qyrqrSSK8o+v0XajwGnNi/eDHyXRtNNTtQKBtQek1a+MCezznXHZnYKv
OTbD08Js9GJGI+vgSQpimZ9D7FaykfnJ/ICh0xR0vGc8kLFiI6JcprTsHAV7
InarZVSwUe6Pgwb2YRTctBvbUV3NRhnjrKYagWfWX3HurWUjleWJdOlwCrK6
uzIX1bPRmv8+3e8RmC9vyw3sZCPyvFGjaSQFUQ/sfx4eYSOWa36/UgwFj8Zc
H8vLcJBbct62/EsUqB4Ms8n9l4OWjZCJ/BQK7M5UcIVDOEhn2NDPKFVQHznS
eTSMg7rS3kklCzx819xM6QIHnVPpCYY0QX+mFORc46DbBnWyF9MpkHqUtzbr
LgcVcaKSZDMpoCk0z6Z94SCnABabnktBH4+Rk2DDRfL6TfuUblPQtDc6vXo/
F817GnUcFbjiiVjy+4NctKhPhsgV+Op1euw6Jy5SHjortqqEAhtbEd96Ty6a
PMfLUyiloKeRZjYZyUXP5XntxB0KunJ/ju+p4aLedZm4555gv07Dhlw5Aq0r
OtL//AEFH4Tzp5MUCcTn5akyayn4ftOlVFqZQBdXPdluIrD06OhyBTUC3aCr
8WoFPuY98XODHoFKvUOb8h4K7v/f/G2LfQRayXXV8qyjQDlPWib6EoHQ1/nX
b55QoGvS/5yZQKDW3fFS7HoKzL+kR16+SqDiv1YrbRP4jJr8VHIGgZJ+jNwr
Ebj2vvLzm8UEWnt6bWVQg+D+TdoRDc0EiuuU2y/dRMFxlyl903YC+VQ+a9wp
sJ945WR7B4G+RbynBwqcsWuzY3cvgVin6hlDAo/0If2hjwQqK0sSK2gWzOsn
NHn8M4GsfnmseC3wItmGwi9fCfTXpg66eAsFWg4mS8fHCeRhVnfIXeBtCxgd
PlMEyt6c3Jom8P4bbWHT0wTiWERLPBXYbVusXsBvAikaVyv9Fvj//ycoA5tx
17dS8D9euRtm
          "]]}, Annotation[#, "Charting`Private`Tag$3305#1"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Bv9//kfU//+d//0PDrLoSA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3305#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
YgK0NlisI3C2SaBqPIrkspyFD1Kkvw97+Z9N4QBje8y0tASBP+Us21QLOKB5
fc67cCWBen3iT1q6OeApYbD/0iId5W1jt+w6NA0XlqoZN/6lI/McVbF15QwE
VlWHHEukY8yPqWZDmRkgZrcGXY+lo5LOpcj87TNAwVv/xUaS98Vag+FwygwI
u99ekh9Mx6Y/S3J2XZsBY75vZlQXOn48FbCLWk/Gn7RaJ+jR8fZJDy211FnI
TY5+EjtIw7jvCpdfZ86Cw1jFuZ3dNEw1bHu0lT4LXP769p9baZirc4hXsnYW
Gk3OptXV0LBRXrp6btkc5P4UTIim0VCO56Nt+fU5OKRRp+sfSMPy/KUxp4/O
Q5q73PP8lTTkXZ3QGzCzADEv+a0m1xTh72+3xkJXcVMsU9SnudYVoLmPzZ6U
Uh6Kpa5kz4k/uXh5+dCmKiteiuy/E7FV4dm44VV5It/gUoqKWrJh8PNM9CEO
mq56sIyi0pTvd63iObq9uEzbs1OAcoEe8fR3xFMU4tGwUe4RpHA1OcbcGXuE
+lfMEhTihSiMrGDTv+/vo+Tbda76W1ZS0qQ4x+bvJWDcNWqsyu9VlLTGdtcf
JbFoEnZC6SFNmBJY97b3QFgUvjg9dvjtW2EKReJbxDu3KJzeEWtf/16Ywrgt
XXvgTBSm/ap9vKKUjLsd3uinEoXDshai/tXk+JOqnY+bI5H67uyUdb8whcvV
g56oHokfxxw/yUqLULi+ybkKj99BhTOh5ul+JB82GrsaR8XTV2mivEEiFIpW
aPQXfypSw/urL4aKUAJr05arOFOxp+DYkc0RZDzW/rq8HhXThMThaTLJviOj
39nhKP7xuVxaAZk/7ShbZR2OXBsrZh8MkPMXDxh7aIVhQ6/A03hzUQqX8zSY
rgnFcrPbqW8tRSmU4+YySvyhSCvhT2o7I0phmIp2iUyHYOKjZZGKNqJkPYxl
5v6EoLnFUo9SFzL//BJHk8chWFfGdWQynJzvg5M5l0II1qZPjZsUk+P9xZeq
GgZjlU2PrugGMQrDYdfNK48DsYP3JSdhkxiF8i3d2Dw2EJkvHHKktpHx2g15
h0ICUWpoaO1GJZI/Xes+eSkQba9PTO3UJvPFwzYN7wzEmZDF7OOnxChcZTkz
/mEBuO25lPTtaJI3aUWpdvuhlmFzjVC8GCXwqqJsyVc/PDaQGh6TSLLXnsxL
eX54VUmWlfSQ5Jij58b9/fB90baaF6/I8YJpUfPSfmhSrhb2uYLk6irVIQtf
tHNg7Tv0jWTb5PzS/b7oKUif/FZF8tvBHbnbfPGh0d7/ftWT3HSp5jPbB/sb
KPs6u0i+n7mlOckHZzx5Ju36yPVOW5aeDPTBFTKfMwcGSZ4S7mh28MFd5w3X
jI+T+QfXn1PY64P63AJVN1hkXOjow5FNPmj57Gsoh0Nyp6ps+XIfdNKP1Pad
I/MzfzfkMr3x//9HUQK3/d//KPwf9b3bGg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3305#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jN2Ry5l30Bv+//stuP7/vt/yP9W6Cv8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3305#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3/dL4X+wFJQ8
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3305#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"z\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Sigma]\\), \\((k)\\)]\\)(z)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"The sigmoid transfer function \[Sigma](z) and its first four \
derivatives\"", TraditionalForm], 
     PlotRange -> {{-5, 5}, {-0.1276836146773086, 0.9933071477189689}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"\[Sigma]", "(", 
         TagBox["z", HoldForm], ")"}], 
       RowBox[{"s1", "(", 
         RowBox[{"\[Sigma]", "(", 
           TagBox["z", HoldForm], ")"}], ")"}], 
       RowBox[{"s2", "(", 
         RowBox[{"\[Sigma]", "(", 
           TagBox["z", HoldForm], ")"}], ")"}], 
       RowBox[{"s3", "(", 
         RowBox[{"\[Sigma]", "(", 
           TagBox["z", HoldForm], ")"}], ")"}], 
       RowBox[{"s4", "(", 
         RowBox[{"\[Sigma]", "(", 
           TagBox["z", HoldForm], ")"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.802275124907449*^9, 3.804328935953998*^9, 
  3.804329681947813*^9, 3.8056680832680073`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"865ec79f-1422-497d-9500-757cb3cb1313"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Difference between methods", "Section",
 CellChangeTimes->{{3.802275147439319*^9, 
  3.8022751549497223`*^9}},ExpressionUUID->"0d861486-5040-4d04-b551-\
981bac5dcb08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Sigma]", "[", "z", "]"}], "-", 
      RowBox[{"\[Sigma]", "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"s1", "[", 
       RowBox[{"\[Sigma]", "[", "z", "]"}], "]"}], "-", 
      RowBox[{"\[Sigma]1", "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"s2", "[", 
       RowBox[{"\[Sigma]", "[", "z", "]"}], "]"}], "-", 
      RowBox[{"\[Sigma]2", "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"s3", "[", 
       RowBox[{"\[Sigma]", "[", "z", "]"}], "]"}], "-", 
      RowBox[{"\[Sigma]3", "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"s4", "[", 
       RowBox[{"\[Sigma]", "[", "z", "]"}], "]"}], "-", 
      RowBox[{"\[Sigma]4", "[", "z", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<z\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(\[Sigma]\), \((k)\)]\)(z)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Errors\>\""}], ",", " ", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7162022650847692`*^9, 3.7162022992138243`*^9}, {
  3.716202362804006*^9, 3.716202411728331*^9}, {3.716203285484805*^9, 
  3.716203289164419*^9}, {3.718460633303244*^9, 3.718460722783835*^9}, {
  3.7184617249675694`*^9, 3.718461781242424*^9}, {3.718461812463318*^9, 
  3.718461837096304*^9}, {3.71846186964568*^9, 3.7184618714114847`*^9}, {
  3.718461918552198*^9, 3.7184619209146767`*^9}, {3.718461957501399*^9, 
  3.7184619597237663`*^9}, {3.7261604012545233`*^9, 3.726160412684531*^9}, {
  3.8022745723181148`*^9, 3.802274640097105*^9}, {3.802275071471734*^9, 
  3.8022751211209555`*^9}, {3.802275183120448*^9, 3.8022752580406876`*^9}, {
  3.8056681440874176`*^9, 3.8056681872997007`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"618b4ed5-4d5a-448b-ac67-3199c07ca2ec"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxN1GlMEnAYBnAgPEASlCwpzaPmig11unQeLc0YbiYaBrVcZijNGYWpMx1q
OVHT2lIRnSgfRCMdK1tbXqtpYbppkcuJGR2UiVdWokzyotr0/fduz579vj2f
Xi++iCPAYTCY2L/51wXTsSarldqH2TqjeLdZv47Mpnxe6fyN7BmSsSFaQn5R
UW1vMCLb+47v73uNXJOdHHOzAVmNzWrBBCPbCFgBtPPOYOq7l0JllROYo5Gn
HB6igMU/jworJ8ngruvy9PY4R7S3muu5WU8CsxTP2NHfiWDVYJ4uK5EATpLU
uLxptQMXJu946EC1BWMYHr1RJXjw+9v1ZeoxHNiNmNa2fBwLvnyEbqN3s/Zu
OyX4U6tGswam54Zar7ZYwE0fE/rzIs3g6SKXcJarCdwjO8Sc4S2A/Wcnlv0U
RvCJHj1hg2cAZ7S1W5yoo2DepQNNb/O7wYOvJioCE7qObTuU8fxxfN0oGJfj
8iGVZgDbkeKL+D+M4GKDLiqzeQH8qKE0vtC0CBYpUynfeGZwUrrcvazIAi4/
lRMS2LgGxu+SGW+sboLHh0t+ScjYiG1zxfwguQYHFjrMe2vP4cEe6oFa2zkb
sLgrKoHcYAfOUAk7gvwIYBIumO87RQQzr5yW0aUksGu3u4h50BFcnXmryn+c
DOaUxjEUHRQwPVHCbSlwAuuMBKWU6wzW8qcinT2o4C/4+xaZN/KyKq2d5oNM
m59382Igp2aZVvzCkFeLrQ9izyD73KPtLb+LHMLSj5CkyCdnG8sqa5GvMTzN
dQrkp098RlRqZM5AYGn/ILIgzRwePYycS+xcGtYiK9ihF0fHkGd0EeFfJ//b
m4tbEkwj79zX3zY7hxxwgbVncRGZiSVos83IZ5uHJBYLcjrzTlj+OvLW/wL/
AVhnIQI=
          "]]}, Annotation[#, "Charting`Private`Tag$3438#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF1HlIE1AcB/C5vKbLa1muNI9CajAVJUV94czGhFKXpkWS2XQhZrlUTJma
4ryNvMVjkddSpIwgL15oaQpaJoma2WGZ88rKY7i8VuF7bw8ejw/f3xce749n
LYj2F1IpFIrPv/3/TJ71WVGpGN0UtOTi/YrJLbV9jb6st/1R28pVtB29qvbL
3CLdKbnaunbjh7vfqF0SF3omtUrtZo3YeoqL2lpCniPzsgkx4/2rqNpCY2L/
nsqw4wNGxOJfJ6MKpg2R+bD9dmVki58BsW9RoNVOBZ3M86TPfb1/6CGHAll/
4lhsMI04RFJi+rZRh8ynhO55rM/QJqawLbu8MjSJP+RVZDWPUonN9SKa1k5p
EF8/wdKaNFd17UoEwlw+N/b0bHbhnJXgprpZrySu+RTQm+ipIJ5NMwU8sxXi
ztJj3LmgJWKH+Yk1e6mc+HTnJG07aAq5AIiaWpTGjBHkVBh07UjNu6QObND/
eiLXKaDdA/fd2C+e8stHiKnxph/DmVMeuK9D56cJfsqxQfrUmFdM3RLJn1Rl
8lNWlpELYHRtuNH3IAXJQyIrLbLSlMQ55+Jdnao3ybzmvlL5nY0dZBEcH8z4
LTHU4Oy6GgaKBc6VPVRsEKW/aDN0SZPkls19ZdoLWhx8P3G7V4BhlQ7yAyCS
RbU629M4+H3oVBeB3YweMffG+VJWMR25App1WERzjxrgPiyKyS50GDdEzgb+
mX5saavRrlMrICtYElifbIzyQjAmp9UWB5og58MhwYyniSUDOQd81XyoLLXB
boJrsogWpi02BzIXF82t2dj3QXjsyrq9O3Yh3EhXPfK5gJwqA7YNzIM597Az
oStvcphejOdjwNn56qyCMmwZuMW2UpRLse9C+Mx2WNaM+xLg3+eU2duP82Io
jFAA70HsGpig17Y6OITtDaW+bldHRnE/B8yNccC3aewssJFAXRXOYueBvYd6
m+YXcD8SOl7hHVhexk6GXA3aUJwCOxFcrBuQKJXInFoYyc13T9rCeRlE/xdy
A/wLJlZatw==
          "]]}, Annotation[#, "Charting`Private`Tag$3438#2"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/+OoPA3+B7zoEMY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3438#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0vPIDjSPbwjso++rltHK+1uni64XE/lGsUgJHU1EXly+4CnGjjdMcj89UNdJ
v09kk/9IZ2An/T726TJHr55HB4Omf27crI20ySo7HYHAnx20p04PXt6Y30Hv
uxzsqwoe03EIXiq44dRxtANc/fPGfUisg55nb6fikNNgO/3zcTGz4tDCpHZ6
X7mOE3yq6u30/X2MHpjXCbTT97+wa2m5aUsb/fsIVsav//0anQACM3c/8rxE
m+i7evF+eNZK33fafTO3S1cz/X6sy0UmopHNdL/XGqcLYqyb6ffcL3jXuZG7
mZ73uXcN5zrpJnrfCgFX/pbZNtDfb8uI2Kl582vpfcnyW9zd2VVD9xuxkuK3
fldD90toHPR7fZMdt4IIiTp1dDRsfnU+hku4ht7f+MzVivI91fT+k8x680xi
0R7kWlXIYZ9b1fT9FeQMmwv3VdPnv/stN55cQJuk/G4fWtPLouvdMAqwPRHP
ot9za9Eprgf2LHofU+sXPUk/wKLrpXs0LhoUYdH9xwbX75Mvr8Kfl3A1KVzP
5xw6jXy/verqJKOKPn9DPeTBiReV9LxTAstfpsujHcC25UWSKKuCrv/ztUip
nVkF/f52l7w727gq6PxpBcGJ7S/L6f3fZjyZ/VKRNvwpmSPGqCuj8znOzDyQ
O4s24b47FbzHqoT+vOmck3hVcyudfp+i8uaHm7XSVHB/26RzEjR8a1VwP/J1
DT7ZJeg0Imv35abUNDoa1otz6vvL1Kng/KtLFu6aZYhOICsspddcf4YOJksW
7prTW1BH1xfJPvHt6BQ6FOabWNS+l6zHeeBLwOJxmewGFbzfp10bmwKGG+h6
PYN7yGyJRjR0eOoG22g30vM0b7Vy7ruPLoC6zvumxzLQOYTlEngw90sjXb9M
OlFWdnkTHS+sKxYKOoqOJjl2HVNznJvofkR8vM02BZ1LUkt4cz71o/99HyyX
v9Fe3Ew5Cd4tlH+Qd4g2Cc/ef2mjQzNdL9TE4OjLBLQfvOS7Lv/fR3QG+Cc+
WmS3sIVyCvicevW7fx86lHhypHbr3Gqh67mFlxfkx6AJuX+kJ2JTN/u80/fJ
x8HzW+n3vR34nxX/nlZ6XzZqEjq3bFrpetaft24bjGTb4unhZSfa0dlgpmjM
WTi3jX5Pky7bvs072+j5De4/KX11tY3uryvzJmbu2zZ6vuP1GU9vN7fR9TVv
sa5/ntNOz3dIou/USeV2+r57S38pF1miC8muK/Mk5F+30+eVRdbwvK6nz4Pi
e/gsMKuDMpPIndOsst/WQc8n+59p4hdz9L/Pd9Jt31Mv2fmrTz+zK65GpxBx
zgh9Ba5Oyh6wNCJ7V6hCJ91fRKNujeCFTnr++ZMDcxxeoB2AP+jvt68VtIlz
yOxBaUYXbc7rwm3Gi7ro+U4ZRNakyXXR90/Yr1LCp8HOny1f997gYhe9D6Pl
F1KSXNjnc4uJB9c4OhdEE4/ePzG3m/6+WQX23Y6W7Kbfv/S+3VXGnm76fcSt
BC4eM0QnkZu6bwzDb6GjSc2ebSemfdEJILmx6rBGYjc9793FxrtDK+l+pG3m
D6WpgW56H3LDjzcdnNlD93NrEV8XLNZD3683P3X5uBLaj6hZzPm5K6KH7h9w
InjYN7+Hfu/xnfKfPnf20Pc5KF3arvILnUtCF+rXPVvwgf6+TXOMl37aiPYg
x7645igdQscBV05CzIe7bPPwaTgaDfXRn+fVOSNXwl704+cFdl9/ZjS4d5De
r49n4Kvss+gG6I9+2/XUfpC+37bi+OXnnw/S93P7kKmnlITOgY4/BYFzq9AM
hqwoq+3DAJpJnORbFqdxfabft06j95Tb8s/0e602H3pusO0zPY/N/akmOe3P
9PylIZwivJboNLIkm+94+0N0GTDHxervMdn1jdfLa8l8RxdDyh6Vp5zzvtDf
j1lG+6ob1n+h93XqtpZA1B50EkT7nTlyx5DOhz+J5921btH5RKPqSsUaX3QB
CRm045uOZ9cfn+lygFX+hd7fnhUeD0M/sev5gX+JDedX+j0Gj4fOOrQUHU7A
OkZ9xVZ0BnF3T3OZ0EQT0hWRW1Byic6HTQXlXEGudD7c7WrYZfX6K/1eHekH
LtkQdCnZ9ozpY1+PjgZvc3mm8xCdD8O7Iwce8gzR/Q8uXz7fU2yI7v926hn4
KqKDgbNm1rlATXQO6EXdfvL6Ijs/w3k0LcJ5iN6fsN75nthAdCix3NI2JyVl
iN5XucBReVJF58PawQK93H50Ibmbt821mOMb/fO8IyA2vlIUnUC2XV/ZWrcZ
nQ8+R55ztR78RtcfWcsv022C9iAHOe8e/2T/jd5neOukw1dfdB3hSjaPHItD
BxN99+7aHyXoYpJxXuf3355v9P0X7ChbzT39jb7v1v/E1rrMHqZcT/psW4B3
4TBdz6vP66ibBLqM7NQ6cm6uLDqbDL/ntXsK6FoSJJX/RHgfugQOPrcP9dMe
pt/7x0zF9MVGw/R9wqzGKoIs6Dgc63zXs8KOjhPOg6aToffZ88SlifOt9Rqm
59db1S4WFTxM73fOU195mXfD9D7T/hzdH5+OzoVzF/n05Qrp+4JQU6F1ag06
ieSqObpu62TXt4xXCsz6TPeHpcu+x6tOse9f+jCuMI9rhP7+2Eyate6Zhyaw
2njVcMlSdA6pY3VyHZIcod/Habv/IpbCCD2vbOQxGa1d9HnSsWDuroYj6Dzy
6G7J8ZO66CrYOnzXvM2Urgd9usqO+tfY83iVTHn3OI7Q+96pkBhp4o5mwXDI
pff9/ug0CJq7tu7iW3Q0HLzV0z+USJv86A/4fYXJvl+Y9nHBiXK2j+XOW2PT
zJ6Xc0O50q+P6BIS98JFw34UnQRl810+zWWM0vG+R/fsX/03St+fg+ue8ObF
aD9Ycss5On8tuhC2jN/dpaOALiKa5ndbPu1Cp5BLvU5XbI+iC4irrtOsOfqj
9H1e1zm+DDBHe0D2QUcFmZv0eWjOd6h4fx9dQcbBwfioN7qMzE2+86snhLJD
NUhK33l6NQ7juWT3G/t13Nnof/+eW2rP9C1Dh4Kd9+3j65rRceDz3+2hjD52
vPy33ZIOjjH6+/Ppml3i5blj9HtyDt3cz7GUHd/aYWuzcis6lGjp2M5N2T1G
79ei0iZMXQvtQR7ssdnebIAugtDsG3VmFuhsaIm5zun+AJ0HAi+vycaHooth
/cJrRTsTaJM9T67q1b1n9zfkuTphUjFG3+/WHWu3yRa6P/hOWkk86B+j95Nw
2SpD9Dt9H+jXv9K/fd44/XmZ0WR5p2oZZYcWWKZhucBQio4TxeLL70YV0UXk
mOplNWf1cfo+l9MsWoW10fnkoayF1Vujcfp+b8Iv8SpajtPzMsUuBZfeRgdD
q5/5Ft1H4/Q+vwuYV371G6fnn/fgosmdMHQVkeK4OC2QhC4FdVuzZyE56DJi
NHJBUq4KzYTbFy7kFLShHcCv2/TE8UF0NCSeNP3WP4lOI5XV511uzpyg98WV
ey4pUAwdCsu3nTuwQQb97/dPgkkPU4nOJ8ckTWw196HDyeUQY4FenQl6X3pm
/kvvO07R3+8HR68rbg74Rc/7tFzSPDriF10/QL0zaFUqZYcGCMt9Vh2Uj/EK
iNu+l0ukBuMFkJE2reDZifEYyN8cf2H2V3QZVMaYBNz9iQ6HpnWiVdM80/jz
i/SEVnJcF56m878svyv3TRydRL77bzlvKosOIYwFX553b6fswILZnsHlpw5g
PA2E+LT/1p6Ypve97D7vpkPn6POwljPbuNAanUc23bbyVXHEejkAU6tL09wx
Hkf2WLdObwxAVxGNoScboiLQBeTUBTWjlanT9HsZ9055BebT9YiF/ruiBTUY
TyE3Wgx/PulEB4OD9gJp3q9oBuMhq1Tf6SeaEK8Dd57+4vlNuYYEFW4uuCqM
DiPhO/onv4qjE8m/F5Q8L0vZoQ3IlqNnurZjPAMKE2Z6nDyA8WJgSWfk1pyg
zGyAlnCLiQPnML8WeiUk1hZYox1gKKjxlLIjfZ5MLXJ7nOqO8Tzg9FZlygag
3wOfwMRoRARdnyx4FLFKIhXjlkSMW+9EQD66mkg6Cj4SrkE3gtx0YZZ7J22i
fMNumOfrb3qfe0c3SDj+RDNB81Kv9k+eP/TnXbffz9VaGO1BTM4eyvwiTtmh
CSw6OIZMZDFeSGxOpoh1bkdXEqc6M60TB+h6xO3IcpfqE5SZLeBTWpu2/9wf
+j7Bu10/51lj/XqIZMKy7Y7oHEhSGtFIcafzITvlzd0NARgvIsUbT6WER2A8
HWqi+QdWpGI8j7StyVv8Ih/jMaQv5MZhoRp0CxleKuX4uBPdQX76dSVyf0Wn
Ei4h7747P3H+eiI4ZM8vyPOXql8LK4pNFULnU2Z4EdkQTT0FMYw3g/ItcCmW
wngRHNJZHXNKkbJqHdGVFWj4shvjkcRs9s/f9pp4vpDY9n5YNU8f4xXENbvi
0OuL6GDw8Uu9Jm+D+Q3wxupVYJEz1m8kSQcfFZz0xHge5K6+9vVzIJ4vINUM
fWH7SMzvhK6WvdsFUjE/nwwlbTIJycP8JPLbfcljORY9L/Bd4E4ubMP8AhDd
Ndx2YgDjBNYtbeH6PEG5qwcCfhn6KHMwVKn+8LpfJ/I+D2WHMoisP5DN+g/j
/34/5qrWLBLCeC5Jj5XvMxJFlwMzQPJnlBjbxQ+W80+sxvNVpOq6kLiyNMZz
oOEsr8L9zZSZ7dCh8WcfSxHzI+Hj9rEzi1TRJeSLZP8Voz3oYjK+sP1e1EGs
Vwq/uGqej2uiawnnaOG77SfR6WR2Z2aOiz6eT4B55XH1VSYYzwaR9DcDIubo
AiIW5v/b0IrtNc+ezIuyoWzQSWQcnFeN22O8CBQu2Spuv4f1ncn2UxaHXB5R
VmWBmvpZwypP9j4Pyp24JuJHWawGtFYcemAYhHE/cop/Z2BkKNaPA6NfCvFj
kex9XehfXwDxmB8LlvVizfdS0Sxikyv8tTILz2fCndjZHCL5GGeCS8BfIcNS
NAH3B+NrI1noLOJ9fQDGGnC+Fgg426EB7VgvmYRq1Brf+4D5ryFqe7FN5QDG
00iCZJbbwmHKwTUkY2FCsMF3ygIfIIfrbVLEND0PKR55UTzKyUHtt4GwOjza
lHgpM0tIY9m9Yee5GO8GL+XA3doLOOj7asYn+a9aSjm4FgRWln+bkKDrQaXP
B7VCSQ66nxvvr+c+Gyn/+zzuvyX47dxW7Mcks76tU9uigvF4Umi44znPHsqq
hZAt9fLrXkOM10DK5PSOh7ewfhlcNRPyPXUX3UI2ta//IvkQnQrDR3bt+OWB
9dogJveUT5kv1ssj5vJWn18EYb4zSIY/UDV/g04n/aKvvCEa8+sg7HHaIF8i
zl9KjBkslfZ0jGcRcetPXu+YeD4Ruj7+GbhdhPmVEHRigcrhSpynFnTLpL2W
1eP5DCKqvHtgqJWyGAua4nSV3/dgPJf4SFx99mQA60fB9SOfe710OKk4AW07
IwX/PMqqOeATKMQ9WYLxOGh4X1ivxaLcVQsLemzexDVQ/ldAh2v9tf/a0ZHE
Z3W7mtkHPJ8IjXufCBUNYDwGRC7u6JUYRqfCicdjiQ7fMb8A/GLf3G2fxng6
aao+rrVtxgxqvnwQGeeV8OWlzIglJxeQ0bG5lP/9PPHfapGrsQBdBy2nxJ6+
W4L5oUT0do3hbAmMp5FTL503nl+H8afEP0eBI38D2gdaP/SzxBQoM5vIEu4X
wbcB56klumsPWbbspCxWTQL2/1XZsg/rZ0ObefxcryOUDViw5MnZzmFtrJdH
zsQLxx7SRReToNoi+0gj7F8MHRO2h3kuoLtgmYjUMuPL6Aqit63jK/Ma5eBa
EqTrkbX0Fs7XBJ32Ox/fdML6TCL2aly30RXPR4FBXpiU3BP0Wwj+eGLawxvv
wyLdPHPKv77A8wUgLpn1Yn8I3qcejA5evvg2nN4vhFisUOKKZef3eNTONkxG
14N44r2WrEycj0nO1m+JFM3F8w0kdHLA9kYx+716FwXsq6tEMxgr4fCijfXo
GGKsxxh43Ir3b4BQh4S0wW6MfyAfQ4xd1fvxParI6oIFJ0KHMP8DOfepeA3H
BOaXQRiv3eSZX+gm8mm9dFEGBxc1fzVZe7jTZ+Esyv/+PWZq6XnuKj+6joQ/
3aVQLUS5qwH6kyZmyiym88naxrf1D1dw4fxw4cfJN5/WYP0iiFzMd01NhrJq
NQxuz1Z7JYf5WSBpYCn0ZxtlsT4wcxLvPbUD480kMrQuMVUdnUo+F7rcFTqM
9gCpga1aV46hw4n5nM/ilafo+eGzbQbXHEOMNxGz/gd96ufR//7+1jlZ7HyJ
Pc/5grWROdY4TyPp2zz16I8txtPAOKTokpIDOgQ+CPgesXGh9wlGd85tTHbD
+xZA91f5+aNPMT8MDHRnTsg8Z++7s7Su4eJLzGeBnmJoWvgbjOdC+1tr/49R
aBboLth1SzwB8/NIi7Ognn4a1vchJ8e6VQKyMT+VNBnGr2jOZ8+jw3KYsaAM
8x1IvbLGR81q9nsde7e86Ekj3Z/ULv4WXt6O799ONB9mP+TtpfdHqqcem+8Z
ZN9H4/yZw3eHMe5KquqlZJnfKQe3k8Nq0/N+T2N+PpQnlI0pzphJOQ8OrHhR
f50X3UhKn5ilJs6lrJpL9v5RfD4sTPnf33tF5rx20kswPxf2tDbpmonPpOsX
7AtXfrsW85NBLe2GWK8Mu98O7wW9Z5TQOcCc0VfgvwPz44iyVfLbRnW0F2R1
OT8QOkyZmUPgyLGLR4/h+TqSmSVxyP0U5r8l26TGZMoMcP46SPPPFZh1HuN5
sIX36ajaJcoGLSTlhmGdozXWqydyfbIp2baUgxtJ4jGG3687eN4DNuVV2W51
wfMdEL/x5elrbjhfHZENttie8BTzi0kMv/Lyb35oV5C+/R+H1EvsV02iP7f1
mL7B851E8lR0/psodr2IYruwnni8Tzes3XLAdXkanm+At29EzXSz0VlktdDg
gef52K8W3jilSzeUoi3JyhHXufOr0YS81j8xcqSRfV68ck2tWzv27yLBMJlU
8gHz62F5VKEP9yDupxaOvUxLLx2m90MePotsc59EZ5H39wP+av5BV8C4nbv4
wpnc1H2aQdLSYXfrHMqMaKJvbGX6UhDtR7xOGD86uwhdBKUHdWLWiKHdgLFj
b/Xn1VivFuTlt43HSlNm1hCzdVILr8phfiYJXrps21YlzC8kDfMEzkzvQFeT
OdycDsy9eL4QVH+OhTgfQdeR60MfC/bqoEtJdE9jP98Zyl1d0N1QMqf6LPb7
AAvKMmW8zdAxcPD9u6Mnr6CDiVPiy6tLbSj/+3s09a2nb7c9zlNGvry4m/Hm
HroLxD2utV9ww/w8OOF8niHzDOOt5LHNSYnR5zhfK+SaH9iTEoz9qmDKYPuF
m2/RYSCtvcFNOQbrFRCjfStiOZPRRcRv+/yawkz2e1RsnDnxMBedRmxqvfii
p7BfMVl5beXKChke3B85dWGBuqc85eAm8uTMLDNtoPzv85d/9Kfbol1oD/Jz
95fY9n3oUJDd1lHzSoMH5wETGdaEyXGM54G/eK6IpB5lg0ZgLUhSGjLGuBvh
nhOml3ARzzeC0l9fx+tWOB8LLMcehG6zpfzv/cM+2RX9uYPnq6C19dJgrgvm
l4EAS/+/+48xXkj25B+VPeCF58vBLm2X1twXGI8jm3RZw/qvMF4Fg3913ePe
Umb1kJDXA+s5YjDflZxSv15yNAn7VYDgZ87zIRl4PgdK3Z9wjTEp//v3gdOm
JSG7ivB8EWxrCFfxqkC/I6O28u29teg2iFyae1O+Be0FRjmHRVy60JZkkUlr
ckMfOpywZplqrflK75+4Ro8P3xjD+eqIqoaje/EPjJeSqbH/pBYxZtHzxvn6
l1zgpvzv7wVTpTXnM/goM7tBrDORa858jMeRJifVkNOLKP/7vnisrlCJXo7u
IntLT7ZPr0JXA8Oi7+YhKTxfBKnzrEWCNmE8CiyS/yYPbcV+FWT1STctFRWM
J5OOaZGRJ7vxfBP4BL9x7zpAObj+3+/PTVIbNTE/lHD3Z5c4nsD7dUD2owPn
a/TQJXB9QxOXhAm6DGRqjUOsL9LzkL7rIyr5V9j1gkTt24Vs0K2gnT3bzsQe
53kPfEa+IinO7Pz8mStTuB9hvIHciojTOu6J8Ugid2j7yFtf7N9EvgyXuE8F
Yn4OhHrpSO0LpSzWALpbP5Q8j2SfF2q7fH4wDp1Gyu9McymlYr0McJZ4EPIo
C+uVEigSVm3Lw3qVMGYW0i5VivmNYJSQKVLZQJnVBjU/6rQuf6As2wQPAw1H
3g/Q88LOHUPuAsOY3wE/e29KGX7HeB5JcOUpjZ9G54KZlNd5zhm8/7NBLRFn
ic3U4qXskA4t1u9CXs+l/O/vRc+F21THhdHpZG9mYbvaEnQKYehr2XmLU2ay
SBpnl0jfWsqqqWAZZp6isAHrF0BH1WJvfgWMEzj0o9S6D7CeHyHiNzWzd6Et
ieTBdRt99qOdwe9a01yLo9ivFnhe3h/afYKd3zvyMWrCBB1INBd7P6wwx/wC
kqOmduGNNd6/AGQtxtRv38T5kiHIN2S1tiPl4Ebgyzk6U9oV40y4Ocjo5XqC
zoX++XG5bd7Yr5wc367/KikAz+eQwnP8Dm6vMT8F5Dyy9Iwj8f5JRODD4iVC
aThfMrHnK/v5ORvPF8JX+ZvNeQWYnw26+uvSXpTj/CwodW3ysa7F+lWwNeH+
tQMt6EzytlXhmEQ3ns8lC2b2bfr1iX5f4izjPa92iLJAHRk9rjYcOYH1a4ih
41il0zTOVwSsyJB3p2bMps6bgnLdUbdNsyk7tJDo34yLs+dRFqsji9fE7etZ
SJlZBQ819NdmLMPzr8iULT/P01UYL4Bzr7M+XpCirFoK9eXm+Ts2Uw4uImrf
F79etA3PR0HC8jLHEVWMF4PYvpsGJeo4Twx5YrVO5dVhrMckf140LbXVxnge
mBfcn9bQxXoh0DKk0Lr2LM6TQ/aK9KUzzPB8IUnZ4e3XZIn55WTVRbUbcTfY
5728xrRd7fH+hcCZHSJncA/jqcTy09H5W92wfxjpEOAYnfsM58+BzLP6se+D
sV8V+KVkmV+OodxVCdxd5gfUk/F8OrnGu0RyOaGsUQ29m8pmTeZi/2aiqXvz
U2UJ9n8DzHvrCsNY6HSyIbYp1L4R6xWToKb7d3U6sD+L8HFuMZL5iPWqSfqN
GVp9n3HeQjj3tWpX0CjW8yXzzwbI6fxAuwKzyXQVP2PO/2zZQC4dll9QyD2H
nkc0n4PH/j/KzHwoVKyclBei/O/nsXWsf/9XUcoOoSC26nzzmxV4PpeU+28u
PbMW7Qy2AoxM4Q3oOFjtUh5VIY/1cqD2l1/APaBs0Ewcrpg83r6LclctSH/a
aD+xD/slQIvuH4t3Gni+ntyvKdU3Oc6uJ7fXV2OpHuXgOujOOruj3hj7+xP3
zbKbHl9kx5UipsV3W+H5UuhfVjL/tw3ev/Lf58ebK/kOno8mO2YbTZi7oJ+R
oTsyfSsf47x14D/xs6HtGcbLifrFoiIvf9z3JxjvepZ28BXWL4RXOgYRXOGY
XwOHy6X8SQw6hPza8ePh1WR0FwlPLbCTIriPDKIt/dS8N5eyRi1wvtY7E1CC
8QKIFVl/+BgLz4cTXfdJZb5G3Hcj8HLlb8hvx/OtJMXWQ+xWL+Z7gNE33Xly
n3HeAphrso7zywjWJ8RUI/fD6b8YzyW5SqcLyvj4qPNF5HL8mpS78yk7hMOS
NeNhSqIY9yMlAUzfMTHKwYXkuuBj16g1lDWaQML1pO1ZGcwPAdbvVWaL5Sl3
NcJt69FTtUqUBaqJ5ED2gUc7KYvlkUa9R7BrH563Ic51x6V/HcF+jWTj/pXL
EnUw/h463g/zXzyD8xbBUx/xmv02lA0KYfelY96Sz/A8C64+zWRcfo7xZhKa
Km6e+BLP10Jt24PGyTcYbwVOzpGdEE3Zsp5sWnMixiEB4z1gePD9ooI0nIcJ
HldW3+N9z56f6fN4+FABZdVG8i1z/PTTMuzXAMu6Txc1VOP9W+Awd96mxU0Y
byS310sG6Xeg4yFaw5M3tBfrZULbtamr/YPs+855od8lNYL9M8k2ZuGBK5Po
d3Dho3Rq8m88Xw9+s73Ff874j3qfTlK8Yfqx8mzKjBoyeezsDycB9DNYfbPU
uGgB5X+/n3VebmTNWYrxSHIv309JQ4Lyv793kgb+hnmtQ8eTD/znBZs34Pk6
EJSrvL1UgbJDHdl5Un7AEDC/Aq7YBxwL24nOJsGvZzAH92K/fMIqNlu/4Qhl
jyb4+7Xax1ob48FEZr4iZ9pp9Gs4szX40rQhZdka4naGp1nVFOsnAnGyULtn
gflF8PltfWzJVcr//v0qWgGL+e0wHkD2j7520XTE+RvBduGcUZ/7uM86CAer
M62PMZ/BkDgXlfbnPdoPRNKXXt69kp9yKPw5+3bxvPWUHeKgl39jcdtGjJeS
0vSMq+FbKXd1kThjtRVXVTCeQHzmVlao7KGsmkVuZRy/OecQxj2JkUn36kYt
rN9E1AUu1oacomxQTqQyx+9YGGJ+DBE8Zy+1zRTrlcGUwKzmmZcxzmB0ZHre
q76G9Sog/9ziTYG30EkQOe9Nh+lduj54EJlHcg8pBzPJ9fNpWxielP/9+1JX
cGdvmS8/ve+dWWUevkFYL4asNdXefvYN1isk/PM7B2SicZ63MJ5l6vMzgbJs
K7SYju4sTMd9lRPm/FvfPJnoHAjLnhlwpgjnKSFuF57sXVfJrm8ltGhivA7n
e09OvA95xWzF/FpQNpM67NaD/d1gpXDKz+MDGK+H2UyVtxLDGPcgw2YlWt++
o2NJvbAWI/M35bXdJIPZFu3CNZear5UEXzx3UnMOZYYPuCwYnrlMkPJUDzHP
sU0YEMF4IWiaz9BPXk7ZoRy2Lnw8x3E1xl/BstwFaQel0WHAdSnYWEQOHQGD
CyXn9W6jrNECrNzErNgdOE8lSbm03cxuL9Z/RQJEihaoH6H879/fTnkaeYI6
lIfbialFy+UOXayfBocXGS+JPIsOB7n8r8XXzNBMInr5xrUdV9ABhCHKIf6f
Ddargb78h5VN9jhPNZRfFrILvYcuJgmiQWss3XC+NOJXsKZO6RnWewj2lvEO
PP5oD3J2sZJ0bTBly0aytzC/OegtxuNA5sphF7MY7N8BQkuaNikk0/eFn4WG
nRwEnQ9dVz4/qsilHFxGCpdc2/q8BOuFkOiiP73GLMr//h55auXqKdtI3xc0
XY5IB6YIUPUqSdjJ4X3p6ZS7EsgPKc9z9YQy4yo5yNh0d+Q9ZZEuElxb8/K/
PMoGGWQszJqsK6S8tx723BRq3l1CWSMH/A8lTxiWY349fBXTEbSvouyQQFTH
v8v411BWbQOvIt8DKfWUZUvhk/9W05omjKeRbRbNzkOtOE8ruO+4+Wp2J94n
g3QLLc5e3YMOA7n+zJadH7HfG3DN1J3U66fzoc3993y7z5SDM2GDUZCs7xBl
mxriJK9yKHEE52dBw6yuC1Xj7H7r2hxcPk9SZlXBrdgVr3l+YbyAsJxy30v8
wX20g4TO2TYVjnlUvJZcX8f14zQX5eByUjodKmzDQ1ksDZaydm/ymk353+fX
8nXf4bj/8Hw+5F+/f7FcAOMxsHD/Wtf++ZSbaonZ0pJQroWUNSoge/hCjpgo
5a5MIpg/uwOWUnaIIia+UT9PiGE9DZJmdnDhNQmcpwb4lL9u9lxN2aME9Oe5
a7xbh/kZkNArc6lECufLItxpVQ8+bpiH70lOPrIM49hMOa6KROvNy1uqQNmy
BBibEjoVFbFeNNGaqTWtDWg3CGsaE7FSQfvCzygvefedlLfWwqE78pqRuzF+
E4I1GywK9+I8NTC+6sajngOUVWPI3h8Lw/8cxn1UkBflafmimjhvGRl6ebJb
QZsyKx92Wv/8rXkC3yuXeO95IXr5NO4vEfoXwZZHevT+AL62ab01pOzaDk+Y
ty3zjPF96knPs2WPO89TNsgDhfPvI36ZoevhwTaDwoUW+H4F0PYfx4fNV7B+
Mch2v/p75Crep5LcTdq5xPwGXY803P+w1fUmZdNqkDztrB16G/fRSU5eSRHk
cqScVktc7/dXnXXG+jaQEij6OO8+/fmDj4kH90s8ory2lQiV2vPcdcf9lMLO
rrj8Hk/cTzy58r3Hcac37seLBPMJq4T44eepACrF1ac5ArB+Pvzeaptu+JKy
QA1IHYm6nhOC54vIKZP2zSvCcB8l5IHd3BGHCMrDTEjz3BHTFY31mdD31vqi
ahzm54Bw9pu1wYmU99YT1gKLpctzKPvVkoeXFQSDKrFfOUm/Z1r1uxr3mwr9
L/zdztTjfPmwIKF8X1YT5VmNsLv4D/fSNrzPv5+gHbL5tzoxXgMh40aObT34
+coj1bO9laEP6ycDY0XRrxcD2D8LNmz5kfbrCzqV6B1af/30ML5fK3E7e2Zz
5hhlrg8k0/bJsOgk9o+CwSc5727+xM9DGREJGzNr+Y2f9wyiTlat3cYh+D/H
dcP1muMfn3NRZkaR0P4HIT94MJ4PtX8y9U/OoTycRziFh5ak81PuyiWy68Va
RATxfCHo79D0tRGmvLeRuB93PtYkQlk1HMillHlbl+D5Yvh8t7/SdzlljTIi
6i/qNilOmZFE9sYd3Hd8NfYvIDcK7blT11Fm5ZKwtri8BdKUw2tI3WiPw3VZ
7FcJM3iFlRs2Uw4ugk3L1X/Jb8F5y8FA3jbNexv2MyZPDkRdm9hOWaAQsg3b
N2nvoCxbCV9uzB1OUsN6hWSx+453QnuxXwTsD7U2u3qAcn8Lscl4s6buMNZ3
Jm9Zjb2bNXF+Jmno4w15po33L4TCYw8C0k9Q1u0jKbmzfDtPU3ZtI2Gyrp4z
9XGeYvAJ4nFbb0RZjBAXvvsuR00oW1bB9ZvcjjdMsb83Odd/zy7wImWRNtDW
mXk9zwLPp4BavrPlwBXMdwW5TVwX517D+yWSlcF3TeRtKDskEiH+GQan7ej7
Adctp1OO9vQ8MD7Aof3WEe+XS3qPOx6pcMb+TaSugLF/7D6e/7//vbuD2qJH
lJuaIOnVX2UVd3yvUBI6946iiSe+Ty143f6z+ZEXfp4SifPn2zLxvuhUcvXk
77WN/rivUjAuuiXxOxBdAVry00slXlGeaoGdr+1E9oVivxyyad4vwctvKRuk
gfidm/95R+L7V4Dg1x88me9wP7XAedqWszsO+xMYLZ6a5k6inNYIPQo2k1Kp
+P1qJzWhkyOaGXj/MJIreOOLTRbul0USHL73BTGxXwYJGbrWnZ+H34dSeKo7
0TpYiP3zwKn0aoNAKf35J1Zbx1kKFZQ9WolRmHWZLos9/1GhsQKnWuwXRlSd
rJjhDThPIpEdHsmobMZ5a4iY3pXk8TbKXH0gUD4cK9qF+aqEsc0yUvUD+/s4
/PZb6Lk+jLtBl/Dll24DOF8CYd0dep7wBfdbBcyRS15N3zDfj8Tpf3X/M4r5
hSS4wvzByu/sfXgofbm7/we+XzM4RFy0t5zG71cBWC78bOPzF+vHg8E9M2vC
Of9/FisnR8YGLvXMpMyoIMqGF0xn8c7HfYBMVb+RDB9l1UxYtt30zLG5mM9g
8Ed9On5TEOt1kD8i5zWDhTEeCkMufQcLRbBePekYN1H/sphyXB6pNPq4Q3A5
5eEc0s31dspbHM+nw3iYaeyi1ZSZLwj3Pslzgeso780jiz5/XrJCmnJXOpF6
/K42VBZdA8obLj9cK4fn48nRatkd0Vtw3gxibD06uUGJ8nQNuSGcFJOoTHmK
BQ9Tr5ls2Un5RB4EnNyyJHM3ZY1kiP01VaO8j3J+G+QGZjzIPYjzx0Odyi3V
PRrYP4J86t4+WaKFcQI/7/59d+g4ZYME+G91jnH1KcpL6ohYsdNibT3KvXVk
k5laTZMhZZFi2M3H/UDXhPLaRnIipkilyxTrq4KZxoPvZ81x3lRye3T/u0+X
MW5KPLz4jC9aU1arJq8VKkW/Xcf3egYpTU+qrW7iPgtJ8c2jrt9vY9wZWpfM
V7npSJmrC4ay6yZ+O1N2bQSGoU+0oyv2u0/mzzhxdqYb7iOGrH6zSPTBE8oC
2URRvZXF94xyUhc5OBBw38MH718Deo/0lIX8KXtUkyvSYhO+gZSLW8C5qjtq
8Svs3wY+V14bvQyl/O/vlYj5JoskwinLJgFJXs0Ki8L7tEHV8X4XyVicp4j0
/IjYHpOA82fA+IuL4xtTKJsWEh5l6ajkdMrB6US0a8hQMYvy1TqQcooTyWLi
fPVEZaVVlWo+7jMeNAs3u+QX4X1Z0N+gCj0fKMvVA/X/7/k///t99v8A7r7I
MQ==
          "]]}, Annotation[#, "Charting`Private`Tag$3438#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nCM53v71Q+gIbz3pP++yn9WWXkf2L32Ye5c/oo7s91HxevbXx+BabLR3aIus
NCM/w2VlXcPKWL9hjLdDt7SW3He0IkKWya+W3Dcn/shHzzvE2PdtOfOO3Yxc
z0hL48dkDfm8yijPpl+k1ZD9eCRdNnU6kBx18222MLlcQ+6PZxLoHAI1pP+b
enmZj53VZL1GatOHg9EMH/B/9PfX82qy3/KXS26pyxKjphu+aePs1WR+0Ud2
b3CoriK23pj+UiCQGKkwXW2KuV9F7rOrtRvJ7a8i+zFlmPrXz1cSVwRzzuvn
VJL9Q61Cri92ZeQmmpKp3tcqyX7nTxby7xKqJO+3WVjdhNZfQTzJOl53JbGC
rM/vsjvU84qR++et830pz7BB+LfpVdwV5L5iHPpWx+nlJB8x3MXx+Es5uU9s
Ta/PRxNGbojChSpPMfL9Qfe+sqxmeHyJ8CGJtjJSH6/TkXn3Wxm5z9OS4PNe
pmAaGuvdKS9RWELMajUdKGeYT2yn8DTxMzvDbLyjv9g+55F+Di36rfeP5THe
M7xvsqAhl9jJUJt9lxG4EbGj35tec+aS87ks0Tg4GJFDPj8rS5oVLpwkRq4+
1zWiW7JJzqVR+2yVSTZ5f4+dV18b8mSTfjwTZcEVX7PIed+mnU8Wl2eY1/5X
0dv2TPJe3hdPt0++zCT34VuXPa3Mx8h9O45xfI/NIPfh/5omxH+OGPk/kzr0
oiud9Bc4lny+0SKdnP/9cglN6fXp5LwbK2Oev0+kkfMGBoi++atII/WyxUry
6dU/yXnkbis+sVrxk+x/elz+w0mZNDKPM3ayBUuf/iD9FfilJ/LDMfn+OP/l
gKBzcypZf1FG7Ox57lSy/5WKHUacp1OIlbSEgspNvxM7Pnps756QTObxwzTz
4aXBJHL/YTtuZa5tSSTf4nHnSPmtRLKfyvu4re4+CSR3Cl/836WyeDKvtPjL
46uWx5Pzj/782FB2PI5Y+NdYhtuLWDKPa9WyERfjYxjf760ebqsGosn8aP3t
xmVbo8n5uofu0Tb/+Er2u8DK9iZY9AupT1wfdmNzYCT5+blh/+ldwasiyHxt
5LtnN1mFkfv037LPDxoPJf0uG2332aT1ifRLcc7TCqr5SM676aO2xCb5YDJP
++9sLEEpgWQezR8ufjqm8p7s96XQ7fgxqXckfzFT1iKzwYf0kxfmeimz6C3p
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
PFO5uqmvj83zNvw/rOZJFw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3438#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"z\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Sigma]\\), \\((k)\\)]\\)(z)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Errors\"", TraditionalForm], 
     PlotRange -> {{-5, 5}, {-1.2413681194090032`*^-14, 
       1.2427558981897846`*^-14}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"\[Sigma]", "(", 
           TagBox["z", HoldForm], ")"}], "-", 
         RowBox[{"\[Sigma]", "(", 
           TagBox["z", HoldForm], ")"}]}], 
       RowBox[{
         RowBox[{"s1", "(", 
           RowBox[{"\[Sigma]", "(", 
             TagBox["z", HoldForm], ")"}], ")"}], "-", 
         RowBox[{"\[Sigma]1", "(", 
           TagBox["z", HoldForm], ")"}]}], 
       RowBox[{
         RowBox[{"s2", "(", 
           RowBox[{"\[Sigma]", "(", 
             TagBox["z", HoldForm], ")"}], ")"}], "-", 
         RowBox[{"\[Sigma]2", "(", 
           TagBox["z", HoldForm], ")"}]}], 
       RowBox[{
         RowBox[{"s3", "(", 
           RowBox[{"\[Sigma]", "(", 
             TagBox["z", HoldForm], ")"}], ")"}], "-", 
         RowBox[{"\[Sigma]3", "(", 
           TagBox["z", HoldForm], ")"}]}], 
       RowBox[{
         RowBox[{"s4", "(", 
           RowBox[{"\[Sigma]", "(", 
             TagBox["z", HoldForm], ")"}], ")"}], "-", 
         RowBox[{"\[Sigma]4", "(", 
           TagBox["z", HoldForm], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8022752477302957`*^9, 3.8022752590368285`*^9}, 
   3.8043289361370893`*^9, 3.8043296821254544`*^9, 3.805668189191885*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"42aa6141-4b4a-4fff-8a00-b0370e09d995"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Test cases for code in ",
 StyleBox["sigma.py",
  FontFamily->"Courier New",
  FontWeight->"Bold"]
}], "Section",
 CellChangeTimes->{{3.805668288738567*^9, 
  3.8056683083596625`*^9}},ExpressionUUID->"a72cfe2e-3282-4422-bb7d-\
6d637caea1fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ztest", "=", "1"}]], "Input",
 CellChangeTimes->{{3.8056684284449863`*^9, 3.805668430469084*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"9724fda3-4613-469c-a4b2-2afda05ae4ea"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.805668433588595*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"6c453c22-524d-47d0-ac86-130666c91f4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", "ztest", "]"}], ",", 
    RowBox[{"\[Sigma]1", "[", "ztest", "]"}], ",", 
    RowBox[{"\[Sigma]2", "[", "ztest", "]"}], ",", 
    RowBox[{"\[Sigma]3", "[", "ztest", "]"}], ",", 
    RowBox[{"\[Sigma]4", "[", "ztest", "]"}]}], "}"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.805668442339801*^9, 3.805668488307792*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"7a0ee7fa-df22-45de-af54-c19746e90795"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7310585786300049`", ",", "0.19661193324148188`", ",", 
   RowBox[{"-", "0.09085774767294844`"}], ",", 
   RowBox[{"-", "0.035325580516235605`"}], ",", "0.1235068613663931`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8056684468572226`*^9, 3.8056684517983828`*^9}, 
   3.8056684895835342`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"5ead79bb-3464-43e3-8405-b2eb0aa67dfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", "ztest", "]"}], ",", 
    RowBox[{"s1", "[", 
     RowBox[{"\[Sigma]", "[", "ztest", "]"}], "]"}], ",", 
    RowBox[{"s2", "[", 
     RowBox[{"\[Sigma]", "[", "ztest", "]"}], "]"}], ",", 
    RowBox[{"s3", "[", 
     RowBox[{"\[Sigma]", "[", "ztest", "]"}], "]"}], ",", 
    RowBox[{"s4", "[", 
     RowBox[{"\[Sigma]", "[", "ztest", "]"}], "]"}]}], "}"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.805668442339801*^9, 3.805668488307792*^9}, {
  3.8056685197979493`*^9, 3.805668549587592*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"366aa821-f562-44c1-98b8-5ef44c81d3ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7310585786300049`", ",", "0.19661193324148185`", ",", 
   RowBox[{"-", "0.09085774767294852`"}], ",", 
   RowBox[{"-", "0.03532558051623669`"}], ",", "0.12350686136638878`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8056685533471737`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"b8903479-6f21-4064-9f79-ae0d2d39c657"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1016.25, 612.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"37a79bcc-5d30-4afb-948c-11540a1399e4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 181, 3, 98, "Title",ExpressionUUID->"1cfd4664-07e3-48c0-b8bf-d366715160af"],
Cell[CellGroupData[{
Cell[786, 29, 258, 8, 68, "Section",ExpressionUUID->"439df9f9-dba9-4270-919a-b3f7bc84cbf6"],
Cell[1047, 39, 338, 8, 46, "Input",ExpressionUUID->"f821c7f8-494b-4bed-aaa9-4bb9e9157434"],
Cell[CellGroupData[{
Cell[1410, 51, 335, 6, 28, "Input",ExpressionUUID->"e862d899-4412-4275-bc80-85025caf0b0e"],
Cell[1748, 59, 432, 11, 53, "Output",ExpressionUUID->"e3b9c8d3-7fd3-41a7-b4e0-d1dd4334fc6f"]
}, Open  ]],
Cell[2195, 73, 528, 13, 50, "Input",ExpressionUUID->"ab8d7aff-c213-4dac-b18e-2462c58a781a"],
Cell[CellGroupData[{
Cell[2748, 90, 333, 7, 30, "Input",ExpressionUUID->"63c3f0a3-c36f-44e9-a9fb-69bdddc21dd4"],
Cell[3084, 99, 788, 23, 54, "Output",ExpressionUUID->"a7ca6945-7317-4cbe-97c2-e7341d905cbd"]
}, Open  ]],
Cell[3887, 125, 897, 25, 51, "Input",ExpressionUUID->"def33e1d-0fb1-47f9-9a7e-cbc1e743d669"],
Cell[CellGroupData[{
Cell[4809, 154, 289, 6, 30, "Input",ExpressionUUID->"3991a231-9eaa-48fe-ba60-b3f5c50a2e54"],
Cell[5101, 162, 1022, 32, 54, "Output",ExpressionUUID->"73eeee51-ea1c-4c6a-a040-158ca6e1e4bb"]
}, Open  ]],
Cell[6138, 197, 1189, 35, 51, "Input",ExpressionUUID->"91a3c062-c5da-4f14-aa45-9e80a7f3330c"],
Cell[CellGroupData[{
Cell[7352, 236, 326, 7, 30, "Input",ExpressionUUID->"137635a8-146f-4121-b262-6e763c6e121e"],
Cell[7681, 245, 1309, 42, 54, "Output",ExpressionUUID->"27a9cbef-11cc-4e87-bc9e-187240cba136"]
}, Open  ]],
Cell[9005, 290, 1534, 46, 51, "Input",ExpressionUUID->"8787dd1c-f628-496e-bfb6-e9438ab70b9e"],
Cell[CellGroupData[{
Cell[10564, 340, 1664, 36, 74, "Input",ExpressionUUID->"daafd1df-c9d6-4a87-a849-191c538d6855"],
Cell[12231, 378, 70245, 1272, 274, "Output",ExpressionUUID->"d4a1bfb6-56b1-42c8-99fd-27861f3fd71b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[82525, 1656, 318, 9, 54, "Section",ExpressionUUID->"0f0738e0-8f74-4968-bbae-b9d651cf9591"],
Cell[82846, 1667, 377, 8, 28, "Input",ExpressionUUID->"87b22244-6bf2-4e23-8f18-0f617ef26f25"],
Cell[83226, 1677, 454, 11, 28, "Input",ExpressionUUID->"d5395d1b-6d15-4e6b-a9af-77af23d9a59a"],
Cell[83683, 1690, 531, 14, 28, "Input",ExpressionUUID->"78f1a706-f3e2-4ad7-9614-8369b02a917e"],
Cell[84217, 1706, 566, 15, 28, "Input",ExpressionUUID->"2ecfc2a1-db01-4f67-8ab7-608437a99c82"],
Cell[CellGroupData[{
Cell[84808, 1725, 1872, 41, 74, "Input",ExpressionUUID->"c17a8674-6682-4ee5-bd88-03f91cc5c30c"],
Cell[86683, 1768, 69528, 1263, 274, "Output",ExpressionUUID->"865ec79f-1422-497d-9500-757cb3cb1313"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[156260, 3037, 173, 3, 53, "Section",ExpressionUUID->"0d861486-5040-4d04-b551-981bac5dcb08"],
Cell[CellGroupData[{
Cell[156458, 3044, 2154, 48, 76, "Input",ExpressionUUID->"618b4ed5-4d5a-448b-ac67-3199c07ca2ec"],
Cell[158615, 3094, 85345, 1528, 250, "Output",ExpressionUUID->"42aa6141-4b4a-4fff-8a00-b0370e09d995"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[244009, 4628, 259, 8, 54, "Section",ExpressionUUID->"a72cfe2e-3282-4422-bb7d-6d637caea1fb"],
Cell[CellGroupData[{
Cell[244293, 4640, 200, 3, 28, "Input",ExpressionUUID->"9724fda3-4613-469c-a4b2-2afda05ae4ea"],
Cell[244496, 4645, 149, 2, 32, "Output",ExpressionUUID->"6c453c22-524d-47d0-ac86-130666c91f4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244682, 4652, 481, 10, 28, "Input",ExpressionUUID->"7a0ee7fa-df22-45de-af54-c19746e90795"],
Cell[245166, 4664, 415, 8, 32, "Output",ExpressionUUID->"5ead79bb-3464-43e3-8405-b2eb0aa67dfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245618, 4677, 659, 16, 28, "Input",ExpressionUUID->"366aa821-f562-44c1-98b8-5ef44c81d3ef"],
Cell[246280, 4695, 361, 7, 32, "Output",ExpressionUUID->"b8903479-6f21-4064-9f79-ae0d2d39c657"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

